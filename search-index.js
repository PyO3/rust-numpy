var searchIndex = new Map(JSON.parse('[\
["numpy",{"doc":"This crate provides Rust interfaces for NumPy C APIs, …","t":"FPGIIKFTEHIHIHIHIHIHIHIFPEEEEEEEEEEEFEFIIIIIIIIFFEEEEEEEEEEEEEEEEEEFEEFNNNNCQNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCNNNHHNHQNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNEMNNNNNNNNNNOOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNENENNNCNNNNNQEOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFIIIIIIIINNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFIIIIIIIIFIIIIIIIINNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNRRKRRKKKMMTFFTKNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCFFFFFFFFFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCCCCPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGJFPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNPPPPPPPPNNNNNPPPPPPPPPPPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPFIIFIIFFFFFFFIIIFFFIIIFFFFIIIIIIIIIIIIIIIIIFIIIIPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPOOOOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOONNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOIOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNOOOOOOOOPPPPPPPGGPPPPPPPGPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPTPPPPPPPPTGPPPPGPPGGPPPGPPPPPPGGGPPPPPPPPPPPPPPPPPPPOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOIIFFIFIIIIFIIIIIIIIIIIIIIIIIIFIFIIIIIIIIIIINOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOJFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["AllowTypeChange","AlreadyBorrowed","BorrowError","Complex32","Complex64","Element","FromVecError","IS_COPY","IntoPyArray","Ix1","Ix1","Ix2","Ix2","Ix3","Ix3","Ix4","Ix4","Ix5","Ix5","Ix6","Ix6","IxDyn","IxDyn","NotContiguousError","NotWriteable","NpyIndex","PY_ARRAY_API","PY_UFUNC_API","PyArray","PyArray0","PyArray1","PyArray2","PyArray3","PyArray4","PyArray5","PyArray6","PyArrayDescr","PyArrayDyn","PyArrayLike","PyArrayLike0","PyArrayLike1","PyArrayLike2","PyArrayLike3","PyArrayLike4","PyArrayLike5","PyArrayLike6","PyArrayLikeDyn","PyFixedString","PyFixedUnicode","PyReadonlyArray","PyReadonlyArray0","PyReadonlyArray1","PyReadonlyArray2","PyReadonlyArray3","PyReadonlyArray4","PyReadonlyArray5","PyReadonlyArray6","PyReadonlyArrayDyn","PyReadwriteArray","PyReadwriteArray0","PyReadwriteArray1","PyReadwriteArray2","PyReadwriteArray3","PyReadwriteArray4","PyReadwriteArray5","PyReadwriteArray6","PyReadwriteArrayDyn","PyUntypedArray","ToNpyDims","ToPyArray","TypeMustMatch","alignment","arguments","arguments","arguments","array","array","as_array_ptr","as_dtype_ptr","as_ptr","as_ptr","as_ref","as_ref","base","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","byteorder","char","clone","clone","clone_into","clone_into","cmp","cmp","convert","datetime","deref","deref","deref","dot","dtype","dtype","einsum","einsum","eq","eq","extract","extract_bound","extract_bound","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_py_object_bound","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","get_array_module","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_field","has_fields","has_object","has_subarray","hash","hash","im","im","inner","into","into","into","into","into","into","into","into","into","into","into_dtype_ptr","into_py","into_py","into_py","is_aligned_struct","is_c_contiguous","is_contiguous","is_empty","is_equiv_to","is_fortran_contiguous","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_native_byteorder","is_type_of","is_type_of","itemsize","kind","len","nalgebra","names","ndarray","ndim","ndim","new","npyffi","num","object","of","partial_cmp","partial_cmp","pyarray","pyo3","re","re","shape","shape","strides","to_object","to_object","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_exact","try_from_exact","try_from_unchecked","try_from_unchecked","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_check","type_check","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_object_raw","type_object_raw","typeobj","PyArray","PyArray0","PyArray1","PyArray2","PyArray3","PyArray4","PyArray5","PyArray6","PyArrayDyn","arange","as_array","as_array_mut","as_ptr","as_raw_array","as_raw_array_mut","as_ref","as_slice","as_slice_mut","as_untyped","borrow","borrow_from_array","borrow_mut","cast","copy_to","data","deref","dims","extract_bound","fmt","fmt","from","from_array","from_borrowed_ptr","from_borrowed_ptr_or_opt","from_iter","from_owned_array","from_owned_object_array","from_owned_ptr","from_owned_ptr_or_opt","from_slice","from_subset","from_vec","from_vec2","from_vec3","get","get_array_module","get_mut","get_owned","into","into_py","into_py","is_in_subset","is_type_of_bound","item","new","readonly","readwrite","reshape","reshape_with_order","resize","to_dyn","to_object","to_owned","to_owned_array","to_string","to_subset","to_subset_unchecked","to_vec","try_as_matrix","try_as_matrix_mut","try_from","try_from","try_from_exact","try_from_unchecked","try_into","try_readonly","try_readwrite","type_check","type_id","type_object_raw","uget","uget_mut","uget_raw","zeros","PyReadonlyArray","PyReadonlyArray0","PyReadonlyArray1","PyReadonlyArray2","PyReadonlyArray3","PyReadonlyArray4","PyReadonlyArray5","PyReadonlyArray6","PyReadonlyArrayDyn","PyReadwriteArray","PyReadwriteArray0","PyReadwriteArray1","PyReadwriteArray2","PyReadwriteArray3","PyReadwriteArray4","PyReadwriteArray5","PyReadwriteArray6","PyReadwriteArrayDyn","as_array","as_array_mut","as_matrix","as_matrix","as_matrix_mut","as_matrix_mut","as_slice","as_slice_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","drop","drop","extract","extract","fmt","fmt","from","from","from_py_object_bound","from_py_object_bound","from_subset","from_subset","get","get_mut","into","into","is_in_subset","is_in_subset","resize","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_as_matrix","try_as_matrix_mut","try_from","try_from","try_into","try_into","type_id","type_id","Dim","Dim","IntoPyArray","Item","Item","NpyIndex","ToNpyDims","ToPyArray","into_pyarray","to_pyarray","ABBREV","Datetime","Timedelta","UNIT","Unit","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","eq","eq","fmt","fmt","from","from","from","from","from_subset","from_subset","get_dtype","get_dtype","hash","hash","into","into","is_in_subset","is_in_subset","partial_cmp","partial_cmp","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","units","Attoseconds","Days","Femtoseconds","Hours","Microseconds","Milliseconds","Minutes","Months","Nanoseconds","Picoseconds","Seconds","Weeks","Years","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","array","flags","objects","types","ufunc","NPY_NUMUSERTYPES","NpyIter_AdvancedNew","NpyIter_Copy","NpyIter_CreateCompatibleStrides","NpyIter_Deallocate","NpyIter_DebugPrint","NpyIter_EnableExternalLoop","NpyIter_GetAxisStrideArray","NpyIter_GetBufferSize","NpyIter_GetDataPtrArray","NpyIter_GetDescrArray","NpyIter_GetGetMultiIndex","NpyIter_GetIndexPtr","NpyIter_GetInitialDataPtrArray","NpyIter_GetInnerFixedStrideArray","NpyIter_GetInnerLoopSizePtr","NpyIter_GetInnerStrideArray","NpyIter_GetIterIndex","NpyIter_GetIterIndexRange","NpyIter_GetIterNext","NpyIter_GetIterSize","NpyIter_GetIterView","NpyIter_GetNDim","NpyIter_GetNOp","NpyIter_GetOperandArray","NpyIter_GetReadFlags","NpyIter_GetShape","NpyIter_GetWriteFlags","NpyIter_GotoIndex","NpyIter_GotoIterIndex","NpyIter_GotoMultiIndex","NpyIter_HasDelayedBufAlloc","NpyIter_HasExternalLoop","NpyIter_HasIndex","NpyIter_HasMultiIndex","NpyIter_IsBuffered","NpyIter_IsFirstVisit","NpyIter_IsGrowInner","NpyIter_IterationNeedsAPI","NpyIter_MultiNew","NpyIter_New","NpyIter_RemoveAxis","NpyIter_RemoveMultiIndex","NpyIter_RequiresBuffering","NpyIter_Reset","NpyIter_ResetBasePointers","NpyIter_ResetToIterIndexRange","NpyTypes","PY_ARRAY_API","PyArrayAPI","PyArrayDescr_Type","PyArrayFlags_Type","PyArrayIter_Type","PyArrayMultiIter_Type","PyArray_All","PyArray_Any","PyArray_Arange","PyArray_ArangeObj","PyArray_ArgMax","PyArray_ArgMin","PyArray_ArgPartition","PyArray_ArgSort","PyArray_As1D","PyArray_As2D","PyArray_AsCArray","PyArray_AxisConverter","PyArray_BoolConverter","PyArray_Broadcast","PyArray_BroadcastToShape","PyArray_BufferConverter","PyArray_ByteorderConverter","PyArray_Byteswap","PyArray_CanCastArrayTo","PyArray_CanCastSafely","PyArray_CanCastScalar","PyArray_CanCastTo","PyArray_CanCastTypeTo","PyArray_CanCoerceScalar","PyArray_CastAnyTo","PyArray_CastScalarDirect","PyArray_CastScalarToCtype","PyArray_CastTo","PyArray_CastToType","PyArray_CastingConverter","PyArray_Check","PyArray_CheckAnyScalarExact","PyArray_CheckAxis","PyArray_CheckExact","PyArray_CheckFromAny","PyArray_CheckStrides","PyArray_Choose","PyArray_Clip","PyArray_ClipmodeConverter","PyArray_CompareLists","PyArray_CompareString","PyArray_CompareUCS4","PyArray_Compress","PyArray_Concatenate","PyArray_Conjugate","PyArray_ConvertClipmodeSequence","PyArray_ConvertToCommonType","PyArray_Converter","PyArray_CopyAndTranspose","PyArray_CopyAnyInto","PyArray_CopyInto","PyArray_CopyObject","PyArray_Correlate","PyArray_Correlate2","PyArray_CountNonzero","PyArray_CreateSortedStridePerm","PyArray_CumProd","PyArray_CumSum","PyArray_DatetimeStructToDatetime","PyArray_DatetimeToDatetimeStruct","PyArray_DebugPrint","PyArray_DescrAlignConverter","PyArray_DescrAlignConverter2","PyArray_DescrConverter","PyArray_DescrConverter2","PyArray_DescrFromObject","PyArray_DescrFromScalar","PyArray_DescrFromType","PyArray_DescrFromTypeObject","PyArray_DescrNew","PyArray_DescrNewByteorder","PyArray_DescrNewFromType","PyArray_Diagonal","PyArray_Dump","PyArray_Dumps","PyArray_EinsteinSum","PyArray_ElementFromName","PyArray_ElementStrides","PyArray_Empty","PyArray_EnsureAnyArray","PyArray_EnsureArray","PyArray_EquivTypenums","PyArray_EquivTypes","PyArray_FailUnlessWriteable","PyArray_FieldNames","PyArray_FillObjectArray","PyArray_FillWithScalar","PyArray_Flatten","PyArray_Free","PyArray_FromAny","PyArray_FromArray","PyArray_FromArrayAttr","PyArray_FromBuffer","PyArray_FromDims","PyArray_FromDimsAndDataAndDescr","PyArray_FromFile","PyArray_FromInterface","PyArray_FromIter","PyArray_FromScalar","PyArray_FromString","PyArray_FromStructInterface","PyArray_GetArrayParamsFromObject","PyArray_GetCastFunc","PyArray_GetEndianness","PyArray_GetField","PyArray_GetNDArrayCFeatureVersion","PyArray_GetNDArrayCVersion","PyArray_GetNumericOps","PyArray_GetPriority","PyArray_GetPtr","PyArray_INCREF","PyArray_InitArrFuncs","PyArray_InnerProduct","PyArray_IntTupleFromIntp","PyArray_IntpConverter","PyArray_IntpFromSequence","PyArray_Item_INCREF","PyArray_Item_XDECREF","PyArray_IterAllButAxis","PyArray_IterNew","PyArray_LexSort","PyArray_MapIterArray","PyArray_MapIterArrayCopyIfOverlap","PyArray_MapIterNext","PyArray_MapIterSwapAxes","PyArray_MatrixProduct","PyArray_MatrixProduct2","PyArray_Max","PyArray_Mean","PyArray_Min","PyArray_MinScalarType","PyArray_MoveInto","PyArray_MultiplyIntList","PyArray_MultiplyList","PyArray_NeighborhoodIterNew","PyArray_New","PyArray_NewCopy","PyArray_NewFlagsObject","PyArray_NewFromDescr","PyArray_NewLikeArray","PyArray_Newshape","PyArray_Nonzero","PyArray_ObjectType","PyArray_One","PyArray_OrderConverter","PyArray_OutputConverter","PyArray_OverflowMultiplyList","PyArray_Partition","PyArray_Prod","PyArray_PromoteTypes","PyArray_Ptp","PyArray_PutMask","PyArray_PutTo","PyArray_PyIntAsInt","PyArray_PyIntAsIntp","PyArray_Ravel","PyArray_RegisterCanCast","PyArray_RegisterCastFunc","PyArray_RegisterDataType","PyArray_RemoveAxesInPlace","PyArray_RemoveSmallest","PyArray_Repeat","PyArray_Reshape","PyArray_Resize","PyArray_ResolveWritebackIfCopy","PyArray_ResultType","PyArray_Return","PyArray_Round","PyArray_Scalar","PyArray_ScalarAsCtype","PyArray_ScalarFromObject","PyArray_ScalarKind","PyArray_SearchSorted","PyArray_SearchsideConverter","PyArray_SelectkindConverter","PyArray_SetBaseObject","PyArray_SetDatetimeParseFunction","PyArray_SetField","PyArray_SetNumericOps","PyArray_SetStringFunction","PyArray_SetUpdateIfCopyBase","PyArray_SetWritebackIfCopyBase","PyArray_Size","PyArray_Sort","PyArray_SortkindConverter","PyArray_Squeeze","PyArray_Std","PyArray_Sum","PyArray_SwapAxes","PyArray_TakeFrom","PyArray_TimedeltaStructToTimedelta","PyArray_TimedeltaToTimedeltaStruct","PyArray_ToFile","PyArray_ToList","PyArray_ToString","PyArray_Trace","PyArray_Transpose","PyArray_Type","PyArray_TypeObjectFromType","PyArray_TypestrConvert","PyArray_UpdateFlags","PyArray_ValidType","PyArray_View","PyArray_Where","PyArray_XDECREF","PyArray_Zero","PyArray_Zeros","PyBigArray_Type","PyBoolArrType_Type","PyByteArrType_Type","PyCDoubleArrType_Type","PyCFloatArrType_Type","PyCLongDoubleArrType_Type","PyCharacterArrType_Type","PyComplexFloatingArrType_Type","PyDataMem_FREE","PyDataMem_NEW","PyDataMem_NEW_ZEROED","PyDataMem_RENEW","PyDataMem_SetEventHook","PyDoubleArrType_Type","PyFlexibleArrType_Type","PyFloatArrType_Type","PyFloatingArrType_Type","PyGenericArrType_Type","PyInexactArrType_Type","PyIntArrType_Type","PyIntegerArrType_Type","PyLongArrType_Type","PyLongDoubleArrType_Type","PyLongLongArrType_Type","PyNumberArrType_Type","PyObjectArrType_Type","PyShortArrType_Type","PySignedIntegerArrType_Type","PyStringArrType_Type","PyUByteArrType_Type","PyUIntArrType_Type","PyULongArrType_Type","PyULongLongArrType_Type","PyUShortArrType_Type","PyUnicodeArrType_Type","PyUnsignedIntegerArrType_Type","PyVoidArrType_Type","_PyArrayScalar_BoolValues","_PyArray_GetSigintBuf","_PyArray_SigintHandler","borrow","borrow","borrow_mut","borrow_mut","from","from","from_subset","from_subset","get_type_object","into","into","is_in_subset","is_in_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","NPY_ALIGNED_STRUCT","NPY_ARRAY_ALIGNED","NPY_ARRAY_BEHAVED","NPY_ARRAY_BEHAVED_NS","NPY_ARRAY_CARRAY","NPY_ARRAY_CARRAY_RO","NPY_ARRAY_C_CONTIGUOUS","NPY_ARRAY_DEFAULT","NPY_ARRAY_ELEMENTSTRIDES","NPY_ARRAY_ENSUREARRAY","NPY_ARRAY_ENSURECOPY","NPY_ARRAY_FARRAY","NPY_ARRAY_FARRAY_RO","NPY_ARRAY_FORCECAST","NPY_ARRAY_F_CONTIGUOUS","NPY_ARRAY_INOUT_ARRAY","NPY_ARRAY_INOUT_ARRAY2","NPY_ARRAY_INOUT_FARRAY","NPY_ARRAY_INOUT_FARRAY2","NPY_ARRAY_IN_ARRAY","NPY_ARRAY_IN_FARRAY","NPY_ARRAY_NOTSWAPPED","NPY_ARRAY_OUT_ARRAY","NPY_ARRAY_OUT_FARRAY","NPY_ARRAY_OWNDATA","NPY_ARRAY_UPDATEIFCOPY","NPY_ARRAY_UPDATE_ALL","NPY_ARRAY_WRITEABLE","NPY_ARRAY_WRITEBACKIFCOPY","NPY_FROM_FIELDS","NPY_ITEM_HASOBJECT","NPY_ITEM_IS_POINTER","NPY_ITEM_REFCOUNT","NPY_ITER_ALIGNED","NPY_ITER_ALLOCATE","NPY_ITER_ARRAYMASK","NPY_ITER_BUFFERED","NPY_ITER_COMMON_DTYPE","NPY_ITER_CONTIG","NPY_ITER_COPY","NPY_ITER_COPY_IF_OVERLAP","NPY_ITER_C_INDEX","NPY_ITER_DELAY_BUFALLOC","NPY_ITER_DONT_NEGATE_STRIDES","NPY_ITER_EXTERNAL_LOOP","NPY_ITER_F_INDEX","NPY_ITER_GLOBAL_FLAGS","NPY_ITER_GROWINNER","NPY_ITER_MULTI_INDEX","NPY_ITER_NBO","NPY_ITER_NO_BROADCAST","NPY_ITER_NO_SUBTYPE","NPY_ITER_OVERLAP_ASSUME_ELEMENTWISE","NPY_ITER_PER_OP_FLAGS","NPY_ITER_RANGED","NPY_ITER_READONLY","NPY_ITER_READWRITE","NPY_ITER_REDUCE_OK","NPY_ITER_REFS_OK","NPY_ITER_UPDATEIFCOPY","NPY_ITER_VIRTUAL","NPY_ITER_WRITEMASKED","NPY_ITER_WRITEONLY","NPY_ITER_ZEROSIZE_OK","NPY_LIST_PICKLE","NPY_NEEDS_INIT","NPY_NEEDS_PYAPI","NPY_OBJECT_DTYPE_FLAGS","NPY_USE_GETITEM","NPY_USE_SETITEM","None","None","None","None","None","None","None","None","None","None","None","None","None","None","None","None","None","None","None","None","None","None","None","None","None","None","None","None","None","None","None","None","NpyAuxData","NpyAuxData_CloneFunc","NpyAuxData_FreeFunc","NpyIter","NpyIter_GetMultiIndexFunc","NpyIter_IterNextFunc","PyArrayFlagsObject","PyArrayInterface","PyArrayIterObject","PyArrayMapIterObject","PyArrayMultiIterObject","PyArrayNeighborhoodIterObject","PyArrayObject","PyArray_ArgFunc","PyArray_ArgPartitionFunc","PyArray_ArgSortFunc","PyArray_ArrFuncs","PyArray_ArrayDescr","PyArray_Chunk","PyArray_CompareFunc","PyArray_CopySwapFunc","PyArray_CopySwapNFunc","PyArray_DatetimeDTypeMetaData","PyArray_DatetimeMetaData","PyArray_Descr","PyArray_Dims","PyArray_DotFunc","PyArray_FastClipFunc","PyArray_FastPutmaskFunc","PyArray_FastTakeFunc","PyArray_FillFunc","PyArray_FillWithScalarFunc","PyArray_FromStrFunc","PyArray_GetItemFunc","PyArray_NonzeroFunc","PyArray_PartitionFunc","PyArray_ScalarKindFunc","PyArray_ScanFunc","PyArray_SetItemFunc","PyArray_SortFunc","PyArray_VectorUnaryFunc","PyDataMem_EventHookFunc","PyUFuncGenericFunction","PyUFuncObject","PyUFunc_LegacyInnerLoopSelectionFunc","PyUFunc_MaskedInnerLoopSelectionFunc","PyUFunc_MaskedStridedInnerLoopFunc","PyUFunc_TypeResolutionFunc","Some","Some","Some","Some","Some","Some","Some","Some","Some","Some","Some","Some","Some","Some","Some","Some","Some","Some","Some","Some","Some","Some","Some","Some","Some","Some","Some","Some","Some","Some","Some","Some","_internal_iter","ait","alignment","ao","ao","argmax","argmin","argsort","arr","array","backstrides","backstrides","base","base","base","base","base","baseoffset","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","bounds","byteorder","c_metadata","cancastscalarkindto","cancastto","cast","castdict","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compare","consec","constant","contiguous","contiguous","coordinates","coordinates","copyswap","copyswapn","core_dim_ixs","core_enabled","core_num_dim_ix","core_num_dims","core_offsets","core_signature","data","data","data","dataptr","dataptr","dataptr","descr","descr","dimensions","dimensions","dimensions","dimensions","dims_m1","dims_m1","doc","dotfunc","elsize","extra_op","extra_op_dtype","extra_op_flags","extra_op_iter","extra_op_next","extra_op_ptrs","f","factors","factors","fancy_dims","fancy_strides","fastclip","fastputmask","fasttake","fields","fill","fillwithscalar","flags","flags","flags","flags","flags","fmt","free","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","fromstr","functions","getitem","hash","identity","index","index","index","index","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","itemsize","iter_count","iter_flags","iteraxes","iters","kind","legacy_inner_loop_selector","len","len","limits","limits","limits_sizes","limits_sizes","masked_inner_loop_selector","meta","metadata","mode","name","names","nargs","nd","nd","nd","nd","nd","nd_fancy","nd_m1","nd_m1","needs_api","nin","nonzero","nout","npy_iter_get_dataptr_t","ntypes","num","numiter","numiter","ob_base","ob_base","ob_base","ob_base","ob_base","ob_base","ob_base","ob_base","ob_base","obj","op_flags","outer","outer_next","outer_ptrs","outer_strides","ptr","ptr","ptr","reserved","reserved1","reserved2","scalarkind","scanfunc","setitem","shape","shape","size","size","size","size","sort","strides","strides","strides","strides","subarray","subspace","subspace_iter","subspace_next","subspace_ptrs","subspace_strides","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","translate","translate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","two","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_num","type_resolver","typekind","typeobj","types","unused","userloops","weakreflist","NPY_ANYORDER","NPY_BIG","NPY_BOOL","NPY_BOOLLTR","NPY_BOOL_SCALAR","NPY_BYTE","NPY_BYTELTR","NPY_BYTEORDER_CHAR","NPY_CASTING","NPY_CDOUBLE","NPY_CDOUBLELTR","NPY_CFLOAT","NPY_CFLOATLTR","NPY_CHAR","NPY_CHARLTR","NPY_CLIP","NPY_CLIPMODE","NPY_CLONGDOUBLE","NPY_CLONGDOUBLELTR","NPY_COMPLEXLTR","NPY_COMPLEX_SCALAR","NPY_CORDER","NPY_DATETIME","NPY_DATETIMELTR","NPY_DATETIMEUNIT","NPY_DOUBLE","NPY_DOUBLELTR","NPY_EQUIV_CASTING","NPY_FLOAT","NPY_FLOATINGLTR","NPY_FLOATLTR","NPY_FLOAT_SCALAR","NPY_FORTRANORDER","NPY_FR_D","NPY_FR_GENERIC","NPY_FR_M","NPY_FR_W","NPY_FR_Y","NPY_FR_as","NPY_FR_fs","NPY_FR_h","NPY_FR_m","NPY_FR_ms","NPY_FR_ns","NPY_FR_ps","NPY_FR_s","NPY_FR_us","NPY_GENBOOLLTR","NPY_HALF","NPY_HALFLTR","NPY_HEAPSORT","NPY_IGNORE","NPY_INT","NPY_INTLTR","NPY_INTNEG_SCALAR","NPY_INTPLTR","NPY_INTPOS_SCALAR","NPY_INTROSELECT","NPY_KEEPORDER","NPY_LITTLE","NPY_LONG","NPY_LONGDOUBLE","NPY_LONGDOUBLELTR","NPY_LONGLONG","NPY_LONGLONGLTR","NPY_LONGLTR","NPY_MERGESORT","NPY_NATBYTE","NPY_NATIVE","NPY_NOSCALAR","NPY_NOTYPE","NPY_NO_CASTING","NPY_NTYPES","NPY_OBJECT","NPY_OBJECTLTR","NPY_OBJECT_SCALAR","NPY_OPPBYTE","NPY_ORDER","NPY_QUICKSORT","NPY_RAISE","NPY_SAFE_CASTING","NPY_SAME_KIND_CASTING","NPY_SCALARKIND","NPY_SEARCHLEFT","NPY_SEARCHRIGHT","NPY_SEARCHSIDE","NPY_SELECTKIND","NPY_SHORT","NPY_SHORTLTR","NPY_SIGNEDLTR","NPY_SORTKIND","NPY_STRING","NPY_STRINGLTR","NPY_STRINGLTR2","NPY_SWAP","NPY_TIMEDELTA","NPY_TIMEDELTALTR","NPY_TYPECHAR","NPY_TYPEKINDCHAR","NPY_TYPES","NPY_UBYTE","NPY_UBYTELTR","NPY_UINT","NPY_UINTLTR","NPY_UINTPLTR","NPY_ULONG","NPY_ULONGLONG","NPY_ULONGLONGLTR","NPY_ULONGLTR","NPY_UNICODE","NPY_UNICODELTR","NPY_UNSAFE_CASTING","NPY_UNSIGNEDLTR","NPY_USERDEF","NPY_USHORT","NPY_USHORTLTR","NPY_VOID","NPY_VOIDLTR","NPY_WRAP","as_","as_","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","day","day","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hour","imag","imag","imag","imag","imag","imag","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","min","month","npy_bool","npy_byte","npy_cdouble","npy_cfloat","npy_char","npy_clongdouble","npy_complex128","npy_complex256","npy_complex64","npy_datetime","npy_datetimestruct","npy_double","npy_float","npy_float128","npy_float16","npy_float32","npy_float64","npy_half","npy_hash_t","npy_int","npy_int16","npy_int32","npy_int64","npy_int8","npy_intp","npy_long","npy_longdouble","npy_longlong","npy_short","npy_stride_sort_item","npy_timedelta","npy_timedeltastruct","npy_ubyte","npy_ucs4","npy_uint","npy_uint16","npy_uint32","npy_uint64","npy_uint8","npy_uintp","npy_ulong","npy_ulonglong","npy_ushort","partial_cmp","perm","ps","ps","real","real","real","real","real","real","sec","sec","stride","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","us","us","year","PY_UFUNC_API","PyUFuncAPI","PyUFunc_DD_D","PyUFunc_D_D","PyUFunc_DefaultTypeResolver","PyUFunc_FF_F","PyUFunc_FF_F_As_DD_D","PyUFunc_F_F","PyUFunc_F_F_As_D_D","PyUFunc_FromFuncAndData","PyUFunc_FromFuncAndDataAndSignature","PyUFunc_FromFuncAndDataAndSignatureAndIdentity","PyUFunc_GG_G","PyUFunc_G_G","PyUFunc_GenericFunction","PyUFunc_GetPyValues","PyUFunc_OO_O","PyUFunc_OO_O_method","PyUFunc_O_O","PyUFunc_O_O_method","PyUFunc_On_Om","PyUFunc_RegisterLoopForDescr","PyUFunc_RegisterLoopForType","PyUFunc_ReplaceLoopBySignature","PyUFunc_SetUsesArraysAsData","PyUFunc_ValidateCasting","PyUFunc_checkfperr","PyUFunc_clearfperr","PyUFunc_d_d","PyUFunc_dd_d","PyUFunc_e_e","PyUFunc_e_e_As_d_d","PyUFunc_e_e_As_f_f","PyUFunc_ee_e","PyUFunc_ee_e_As_dd_d","PyUFunc_ee_e_As_ff_f","PyUFunc_f_f","PyUFunc_f_f_As_d_d","PyUFunc_ff_f","PyUFunc_ff_f_As_dd_d","PyUFunc_g_g","PyUFunc_getfperr","PyUFunc_gg_g","PyUFunc_handlefperr","borrow","borrow_mut","from","from_subset","into","is_in_subset","to_subset","to_subset_unchecked","try_from","try_into","type_id"],"q":[[0,"numpy"],[315,"numpy::array"],[399,"numpy::borrow"],[465,"numpy::convert"],[475,"numpy::datetime"],[523,"numpy::datetime::units"],[783,"numpy::npyffi"],[788,"numpy::npyffi::array"],[1112,"numpy::npyffi::flags"],[1182,"numpy::npyffi::objects"],[1714,"numpy::npyffi::types"],[2195,"numpy::npyffi::ufunc"],[2250,"ndarray::dimension::dim"],[2251,"ndarray::dimension::dynindeximpl"],[2252,"pyo3::marker"],[2253,"pyo3::instance"],[2254,"pyo3_ffi::object"],[2255,"pyo3::types::any"],[2256,"core::cmp"],[2257,"ndarray::dimension::dimension_trait"],[2258,"pyo3::err"],[2259,"pyo3::instance"],[2260,"core::fmt"],[2261,"core::fmt"],[2262,"core::fmt"],[2263,"pyo3_ffi::unicodeobject"],[2264,"pyo3::err"],[2265,"pyo3::instance"],[2266,"pyo3::conversion"],[2267,"core::marker"],[2268,"std::os::raw"],[2269,"pyo3::err"],[2270,"core::any"],[2271,"pyo3_ffi::cpython::object"],[2272,"pyo3::types::typeobject"],[2273,"num_traits::cast"],[2274,"ndarray"],[2275,"ndarray"],[2276,"core::iter::traits::collect"],[2277,"ndarray"],[2278,"ndarray::aliases"],[2279,"core::marker"],[2280,"nalgebra::base::matrix_view"],[2281,"nalgebra::base::scalar"],[2282,"nalgebra::base::dimension"],[2283,"nalgebra::base::matrix_view"],[2284,"nalgebra::base::alias_view"],[2285,"core::cmp"],[2286,"std::os::raw"]],"d":["Marker type to indicate that the element type received via …","The given array is already borrowed","Inidcates why borrowing an array failed.","","","Represents that a type can be an element of <code>PyArray</code>.","Represents that given <code>Vec</code> cannot be treated as an array.","Flag that indicates whether this type is trivially …","","Create a one-dimensional index","one-dimensional","Create a two-dimensional index","two-dimensional","Create a three-dimensional index","three-dimensional","Create a four-dimensional index","four-dimensional","Create a five-dimensional index","five-dimensional","Create a six-dimensional index","six-dimensional","Create a dynamic-dimensional index","dynamic-dimensional","Represents that the given array is not contiguous.","The given array is not writeable","","","","","","","","","","","","Binding of <code>numpy.dtype</code>.","","Receiver for arrays or array-like types.","Receiver for zero-dimensional arrays or array-like types.","Receiver for one-dimensional arrays or array-like types.","Receiver for two-dimensional arrays or array-like types.","Receiver for three-dimensional arrays or array-like types.","Receiver for four-dimensional arrays or array-like types.","Receiver for five-dimensional arrays or array-like types.","Receiver for six-dimensional arrays or array-like types.","Receiver for arrays or array-like types whose …","A newtype wrapper around <code>[u8; N]</code> to handle <code>byte</code> scalars …","A newtype wrapper around <code>[PyUCS4; N]</code> to handle <code>str_</code> scalars…","","","","","","","","","","","","","","","","","","","A safe, untyped wrapper for NumPy’s <code>ndarray</code> class.","","","Marker type to indicate that the element type received via …","Returns the required alignment (bytes) of this type …","","","","Safe interface for NumPy’s N-dimensional arrays","Create an <strong><code>Array</code></strong> with one, two or three dimensions.","Returns a raw pointer to the underlying <code>PyArrayObject</code>.","Returns <code>self</code> as <code>*mut PyArray_Descr</code>.","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","","","Returns the type descriptor for the base element of …","Types to safely create references into NumPy arrays","","","","","","","","","","","","","","","","","","","","","Returns an ASCII character indicating the byte-order of …","Returns a unique ASCII character for each of the 21 …","","","","","","","Defines conversion traits between Rust types and NumPy …","Support datetimes and timedeltas","","","","Return the dot product of two arrays.","Returns the type descriptor (“dtype”) for a registered …","Returns the <code>dtype</code> of the array.","Return the Einstein summation convention of given tensors.","Return the Einstein summation convention of given tensors.","","","","","","Returns bit-flags describing how this type descriptor is …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Returns the associated type descriptor (“dtype”) for …","","","","","Returns the type descriptor and offset of the field with …","Returns true if the type descriptor is a structured type.","Returns true if the type descriptor contains any …","Returns true if the type descriptor is a sub-array.","","","Imaginary portion of the complex number","Imaginary portion of the complex number","Return the inner product of two arrays.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>self</code> as <code>*mut PyArray_Descr</code> while increasing the …","","","","Returns true if the type descriptor is a struct which …","Returns <code>true</code> if the internal data of the array is …","Returns <code>true</code> if the internal data of the array is …","Returns <code>true</code> if the there are no elements in the array.","Returns true if two type descriptors are equivalent.","Returns <code>true</code> if the internal data of the array is …","","","","","","","","","","","Returns true if type descriptor byteorder is native, or …","","","Returns the element size of this type descriptor.","Returns an ASCII character (one of <code>biufcmMOSUV</code>) …","Calculates the total number of elements in the array.","","Returns an ordered list of field names, or <code>None</code> if there …","","Returns the number of dimensions if this type descriptor …","Returns the number of dimensions of the array.","Creates a new type descriptor (“dtype”) object from an …","Low-Level bindings for NumPy C API.","Returns a unique number for each of the 21 different …","Shortcut for creating a type descriptor of <code>object</code> type.","Returns the type descriptor for a registered type.","","","Create a <code>PyArray</code> with one, two or three dimensions.","","Real portion of the complex number","Real portion of the complex number","Returns the shape of the sub-array.","Returns a slice which contains dimmensions of the array.","Returns a slice indicating how many bytes to advance when …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the array scalar corresponding to this type …","A safe, statically-typed wrapper for NumPy’s <code>ndarray</code> …","Zero-dimensional array.","One-dimensional array.","Two-dimensional array.","Three-dimensional array.","Four-dimensional array.","Five-dimensional array.","Six-dimensional array.","Dynamic-dimensional array.","Return evenly spaced values within a given interval.","Returns an <code>ArrayView</code> of the internal array.","Returns an <code>ArrayViewMut</code> of the internal array.","","Returns the internal array as <code>RawArrayView</code> enabling …","Returns the internal array as <code>RawArrayViewMut</code> enabling …","","Returns an immutable view of the internal data as a slice.","Returns a mutable view of the internal data as a slice.","Access an untyped representation of this array.","","Creates a NumPy array backed by <code>array</code> and ties its …","","Cast the <code>PyArray&lt;T&gt;</code> to <code>PyArray&lt;U&gt;</code>, by allocating a new …","Copies <code>self</code> into <code>other</code>, performing a data type conversion …","Returns a pointer to the first element of the array.","","Same as <code>shape</code>, but returns <code>D</code> instead of <code>&amp;[usize]</code>.","","","","Returns the argument unchanged.","Construct a NumPy array from a <code>ndarray::ArrayBase</code>.","Constructs a reference to a <code>PyArray</code> from a raw point to a …","","Construct a one-dimensional array from an <code>Iterator</code>.","Constructs a NumPy from an <code>ndarray::Array</code>","Construct a NumPy array containing objects stored in a …","Constructs a reference to a <code>PyArray</code> from a raw pointer to …","","Construct a one-dimensional array from a slice.","","Construct a one-dimensional array from a <code>Vec&lt;T&gt;</code>.","Construct a two-dimension array from a <code>Vec&lt;Vec&lt;T&gt;&gt;</code>.","Construct a three-dimensional array from a <code>Vec&lt;Vec&lt;Vec&lt;T&gt;&gt;&gt;</code>…","Get a reference of the specified element if the given …","Returns a handle to NumPy’s multiarray module.","Same as <code>get</code>, but returns <code>Option&lt;&amp;mut T&gt;</code>.","Get a copy of the specified element in the array.","Calls <code>U::from(self)</code>.","","","","","Get the single element of a zero-dimensional array.","Creates a new uninitialized NumPy array.","Get an immutable borrow of the NumPy array","Get a mutable borrow of the NumPy array","Special case of <code>reshape_with_order</code> which keeps the memory …","Construct a new array which has same values as self, but …","Extends or truncates the dimensions of an array.","Turn an array with fixed dimensionality into one with …","","Turn <code>&amp;PyArray&lt;T,D&gt;</code> into <code>Py&lt;PyArray&lt;T,D&gt;&gt;</code>, i.e. a pointer …","Get a copy of the array as an <code>ndarray::Array</code>.","","","","Returns a copy of the internal data of the array as a <code>Vec</code>.","Try to convert this array into a <code>nalgebra::MatrixView</code> …","Try to convert this array into a <code>nalgebra::MatrixViewMut</code> …","","","","","","Get an immutable borrow of the NumPy array","Get a mutable borrow of the NumPy array","","","","Get an immutable reference of the specified element, …","Same as <code>uget</code>, but returns <code>&amp;mut T</code>.","Same as <code>uget</code>, but returns <code>*mut T</code>.","Construct a new NumPy array filled with zeros.","Read-only borrow of an array.","Read-only borrow of a zero-dimensional array.","Read-only borrow of a one-dimensional array.","Read-only borrow of a two-dimensional array.","Read-only borrow of a three-dimensional array.","Read-only borrow of a four-dimensional array.","Read-only borrow of a five-dimensional array.","Read-only borrow of a six-dimensional array.","Read-only borrow of an array whose dimensionality is …","Read-write borrow of an array.","Read-write borrow of a zero-dimensional array.","Read-write borrow of a one-dimensional array.","Read-write borrow of a two-dimensional array.","Read-write borrow of a three-dimensional array.","Read-write borrow of a four-dimensional array.","Read-write borrow of a five-dimensional array.","Read-write borrow of a six-dimensional array.","Read-write borrow of an array whose dimensionality is …","Provides an immutable array view of the interior of the …","Provides a mutable array view of the interior of the NumPy …","Convert this two-dimensional array into a …","Convert this one-dimensional array into a …","Convert this one-dimensional array into a …","Convert this two-dimensional array into a …","Provide an immutable slice view of the interior of the …","Provide a mutable slice view of the interior of the NumPy …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Provide an immutable reference to an element of the NumPy …","Provide a mutable reference to an element of the NumPy …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Extends or truncates the dimensions of an array.","","","","","","Try to convert this array into a <code>nalgebra::MatrixView</code> …","Try to convert this array into a <code>nalgebra::MatrixViewMut</code> …","","","","","","","The dimension type of the resulting array.","The dimension type of the resulting array.","Conversion trait from owning Rust types into <code>PyArray</code>.","The element type of resulting array.","The element type of resulting array.","Trait implemented by types that can be used to index an …","Utility trait to specify the dimensions of an array.","Conversion trait from borrowing Rust types to <code>PyArray</code>.","Consumes <code>self</code> and moves its data into a NumPy array.","Copies the content pointed to by <code>&amp;self</code> into a newly …","The abbrevation used for debug formatting","Corresponds to the <code>datetime64</code> scalar type","Corresponds to the [<code>timedelta64</code>][scalars-datetime64] …","The matching NumPy datetime unit code","Represents the datetime units supported by NumPy","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Predefined implementors of the <code>Unit</code> trait","Attoseconds, i.e. 10^-18 seconds","Days, i.e. 24 hours","Femtoseconds, i.e. 10^-15 seconds","Hours, i.e. 60 minutes","Microseconds, i.e. 10^-6 seconds","Milliseconds, i.e. 10^-3 seconds","Minutes, i.e. 60 seconds","Months, i.e. 30 days","Nanoseconds, i.e. 10^-9 seconds","Picoseconds, i.e. 10^-12 seconds","Seconds","Weeks, i.e. 7 days","Years, i.e. 12 months","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Low-Level binding for Array API","","Low-Lebel binding for NumPy C API C-objects","","Low-Level binding for UFunc API","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","All type objects exported by the NumPy API.","A global variable which stores a ‘capsule’ pointer to …","See PY_ARRAY_API for more.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Checks that <code>op</code> is an instance of <code>PyArray</code> or not.","","","Checks that <code>op</code> is an exact instance of <code>PyArray</code> or noteturns the argument unchanged.","Returns the argument unchanged.","","","Get a pointer of the type object assocaited with <code>ty</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","No value.","No value.","No value.","No value.","No value.","No value.","No value.","No value.","No value.","No value.","No value.","No value.","No value.","No value.","No value.","No value.","No value.","No value.","No value.","No value.","No value.","No value.","No value.","No value.","No value.","No value.","No value.","No value.","No value.","No value.","No value.","No value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeglobal variable which stores a ‘capsule’ pointer to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","",""],"i":[0,11,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,7,10,11,0,0,12,6,6,12,6,12,6,0,6,12,35,37,22,7,10,11,18,19,6,12,35,37,22,7,10,11,18,19,6,6,18,19,18,19,18,19,0,0,6,12,22,0,0,12,0,0,18,19,22,6,12,6,6,6,12,12,35,37,22,7,7,10,10,11,11,18,18,19,19,6,12,35,37,22,7,10,11,18,18,19,19,6,12,6,12,22,6,12,35,37,22,7,10,11,18,19,0,23,161,162,18,19,6,6,6,6,18,19,161,162,0,6,12,35,37,22,7,10,11,18,19,6,6,12,12,6,12,12,12,6,12,6,12,35,37,22,7,10,11,18,19,6,6,12,6,6,12,0,6,0,6,12,6,0,6,6,6,18,19,0,0,161,162,6,12,12,6,12,18,19,6,12,7,10,11,18,19,6,12,35,37,22,7,10,11,18,19,6,12,35,37,22,7,10,11,18,19,6,6,12,12,35,37,22,7,10,11,18,19,6,12,6,12,6,12,35,37,22,7,10,11,18,19,6,12,6,12,35,37,22,7,10,11,18,19,6,12,6,0,0,0,0,0,0,0,0,0,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,0,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,77,78,77,77,78,78,77,78,77,78,77,78,77,77,77,78,77,78,77,78,77,78,77,78,77,78,77,78,77,78,77,78,77,78,78,77,77,78,77,78,77,78,77,78,77,78,77,78,87,88,0,87,88,0,0,0,87,88,91,0,0,91,0,89,92,89,92,89,92,89,92,89,92,89,92,89,92,89,89,92,92,89,92,89,92,89,92,89,92,89,92,89,92,89,92,89,92,89,92,89,92,89,92,89,92,0,0,0,0,0,0,0,0,0,0,0,0,0,0,98,99,100,101,102,103,104,105,106,107,108,109,110,98,99,100,101,102,103,104,105,106,107,108,109,110,98,99,100,101,102,103,104,105,106,107,108,109,110,98,99,100,101,102,103,104,105,106,107,108,109,110,98,99,100,101,102,103,104,105,106,107,108,109,110,98,99,100,101,102,103,104,105,106,107,108,109,110,98,99,100,101,102,103,104,105,106,107,108,109,110,98,99,100,101,102,103,104,105,106,107,108,109,110,98,99,100,101,102,103,104,105,106,107,108,109,110,98,99,100,101,102,103,104,105,106,107,108,109,110,98,99,100,101,102,103,104,105,106,107,108,109,110,98,99,100,101,102,103,104,105,106,107,108,109,110,98,99,100,101,102,103,104,105,106,107,108,109,110,98,99,100,101,102,103,104,105,106,107,108,109,110,98,99,100,101,102,103,104,105,106,107,108,109,110,98,99,100,101,102,103,104,105,106,107,108,109,110,98,99,100,101,102,103,104,105,106,107,108,109,110,98,99,100,101,102,103,104,105,106,107,108,109,110,98,99,100,101,102,103,104,105,106,107,108,109,110,0,0,0,0,0,143,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,0,0,0,143,143,143,143,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,0,111,111,0,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,143,111,111,111,111,111,111,111,111,111,143,143,143,143,143,143,143,143,111,111,111,111,111,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,111,111,111,143,111,143,111,143,111,143,111,111,143,111,143,111,143,111,143,111,143,111,143,111,143,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,163,164,165,166,167,168,169,170,133,171,172,173,174,175,176,177,178,179,180,181,182,160,183,184,185,186,117,116,142,187,188,189,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,163,164,165,166,167,168,169,170,133,171,172,173,174,175,176,177,178,179,180,181,182,160,183,184,185,186,117,116,142,187,188,189,148,137,14,138,148,135,135,135,145,137,138,148,13,144,123,150,151,137,13,14,144,135,145,136,123,146,147,115,138,122,148,137,149,150,151,13,14,144,135,145,136,123,146,147,115,138,122,148,137,149,150,151,138,148,14,14,135,135,135,135,13,14,144,135,145,136,123,146,147,115,138,122,148,137,149,150,151,149,13,14,144,135,145,136,123,146,147,115,138,122,148,137,149,150,151,135,137,148,138,148,138,148,135,135,147,147,147,147,147,147,13,146,147,138,148,137,13,146,13,122,148,137,138,148,147,135,14,137,137,137,137,137,137,14,138,148,137,137,135,135,135,14,135,135,13,14,145,123,146,115,149,13,14,144,135,145,136,123,146,147,115,138,122,148,137,149,150,151,13,14,144,135,145,136,123,146,147,115,138,122,148,137,149,150,151,135,147,135,14,147,138,122,148,137,13,14,144,135,145,136,123,146,147,115,138,122,148,137,149,150,151,13,14,144,135,145,136,123,146,147,115,138,122,148,137,149,150,151,146,137,147,137,122,14,147,136,123,138,148,138,148,147,151,14,148,147,14,147,13,146,122,148,137,137,138,148,137,147,135,147,0,147,150,122,137,13,14,145,123,147,138,122,148,137,147,147,137,137,137,137,136,123,147,149,147,147,135,135,135,144,146,138,122,148,137,135,13,146,138,148,14,137,137,137,137,137,13,14,144,135,145,136,123,146,147,115,138,122,148,137,149,150,151,13,14,144,135,145,136,123,146,147,115,138,122,148,137,149,150,151,13,14,144,135,145,136,123,146,147,115,138,122,148,137,149,150,151,138,148,13,14,144,135,145,136,123,146,147,115,138,122,148,137,149,150,151,13,14,144,135,145,136,123,146,147,115,138,122,148,137,149,150,151,146,14,13,14,144,135,145,136,123,146,147,115,138,122,148,137,149,150,151,14,147,146,14,147,137,147,13,79,158,155,156,124,155,156,0,0,155,156,155,156,155,156,125,0,155,156,157,124,79,155,156,0,155,156,113,155,157,156,124,79,128,128,128,128,128,128,128,128,128,128,128,128,128,128,157,155,156,120,158,155,156,124,156,124,119,79,158,155,155,156,155,156,156,120,158,158,124,155,113,155,155,156,124,158,0,120,125,113,113,0,139,139,0,0,155,156,157,0,155,156,156,158,155,156,0,0,0,155,156,155,156,156,155,155,156,156,155,156,113,157,155,155,156,155,156,125,129,140,152,153,154,79,124,120,139,128,155,119,113,125,129,140,127,156,157,158,152,153,154,79,124,120,139,128,155,119,113,125,129,140,127,156,157,158,152,153,154,79,124,120,139,128,155,119,113,125,129,140,127,156,157,158,152,153,154,79,124,120,139,128,155,119,113,125,129,140,127,156,157,158,155,129,140,79,124,120,139,128,155,119,113,125,158,152,153,154,79,124,120,139,128,155,119,113,129,140,127,156,157,158,152,153,154,79,124,120,139,128,155,119,113,125,129,140,127,156,157,158,152,153,154,79,124,120,139,128,155,119,113,125,129,140,127,156,157,158,79,124,120,139,128,155,119,113,125,158,129,190,191,192,152,153,154,152,153,154,79,124,120,139,128,155,119,113,125,129,140,127,156,157,158,152,153,154,79,124,120,139,128,155,119,113,125,129,140,127,156,157,158,129,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,155,127,129,140,190,191,192,152,153,154,129,140,127,152,153,154,79,124,120,139,128,155,119,113,125,129,140,127,156,157,158,152,153,154,79,124,120,139,128,155,119,113,125,129,140,127,156,157,158,152,153,154,79,124,120,139,128,155,119,113,125,129,140,127,156,157,158,152,153,154,79,124,120,139,128,155,119,113,125,129,140,127,156,157,158,152,153,154,79,124,120,139,128,155,119,113,125,129,140,127,156,157,158,152,153,154,79,124,120,139,128,155,119,113,125,129,140,127,156,157,158,129,140,129,0,0,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159],"f":[0,0,0,0,0,0,0,0,0,[1,[[3,[[2,[1]]]]]],0,[[1,1],[[3,[[2,[1]]]]]],0,[[1,1,1],[[3,[[2,[1]]]]]],0,[[1,1,1,1],[[3,[[2,[1]]]]]],0,[[1,1,1,1,1],[[3,[[2,[1]]]]]],0,[[1,1,1,1,1,1],[[3,[[2,[1]]]]]],0,[[[4,[1]]],[[3,[5]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[6,1],[[7,8],9],[[10,8],9],[[11,8],9],0,0,[12,13],[6,14],[6,15],[12,15],[6,16],[12,16],[6,6],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[6,17],[6,17],[18,18],[19,19],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[18,18],21],[[19,19],21],0,0,[6,16],[12,16],[[[22,[-1,-2,-3]]],-4,23,24,0,[]],[[[25,[-1,-2]],[25,[-1,-3]]],[[26,[-4]]],23,24,24,[[0,[-1]]]],[8,6],[12,6],[[27,[4,[[25,[-1,28]]]]],[[26,[-2]]],23,[[0,[-1]]]],0,[[18,18],29],[[19,19],29],[16,[[26,[[22,[-1,-2,-3]]]]],23,24,0],[[[30,[16]]],[[26,[6]]]],[[[30,[16]]],[[26,[12]]]],[6,31],[[6,32],[[34,[20,33]]]],[[6,32],[[34,[20,33]]]],[[12,32],[[34,[20,33]]]],[[12,32],[[34,[20,33]]]],[[35,32],36],[[37,32],36],[[[22,[-1,-2,-3]],32],36,[23,38],[24,38],[0,38]],[[7,32],36],[[7,32],36],[[10,32],36],[[10,32],36],[[11,32],36],[[11,32],36],[[18,32],36],[[18,32],36],[[19,32],36],[[19,32],36],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[2,[39]]],18],[[[2,[40]]],19],[-1,-1,[]],[[8,15],[[41,[-1]]],[]],[[8,15],[[41,[-1]]],[]],[[8,15],[[41,[-1]]],[]],[[8,15],[[41,[-1]]],[]],[[[30,[16]]],[[34,[-1,42]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[8,6],[8,6],[8,6],[8,6],[8,6],[[6,27],[[26,[[20,[6,1]]]]]],[6,29],[6,29],[6,29],[[18,-1],20,43],[[19,-1],20,43],0,0,[[[25,[-1,-2]],[25,[-1,-3]]],[[26,[-4]]],23,24,24,[[0,[-1]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[6,14],[[6,8],[[44,[6]]]],[[12,8],9],[[12,8],[[44,[12]]]],[6,29],[12,29],[12,29],[12,29],[[6,6],29],[12,29],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[6,[[41,[29]]]],[16,29],[16,29],[6,1],[6,17],[12,1],0,[6,[[41,[[45,[27]]]]]],0,[6,1],[12,1],[[8,-1],[[26,[6]]],[46,47]],0,[6,48],[8,6],[8,6],[[18,18],[[41,[21]]]],[[19,19],[[41,[21]]]],0,0,0,0,[6,[[45,[1]]]],[12,[[4,[1]]]],[12,[[4,[49]]]],[[6,8],9],[[12,8],9],[-1,-2,[],[]],[-1,-2,[],[]],[-1,50,[]],[-1,50,[]],[-1,50,[]],[-1,50,[]],[-1,50,[]],[-1,50,[]],[-1,50,[]],[-1,[[41,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[34,[-2,51]]],[[52,[16]]],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2,51]]],[[52,[16]]],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2,51]]],[[52,[16]]],[]],[-1,[[34,[-2,51]]],[[52,[16]]],[]],[-1,-2,[[52,[16]]],[]],[-1,-2,[[52,[16]]],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[[[30,[16]]],29],[[[30,[16]]],29],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[8,54],[8,54],[6,55],0,0,0,0,0,0,0,0,0,[[8,-1,-1,-1],[[25,[-1,56]]],[23,[58,[57]]]],[[[25,[-1,-2]]],[[59,[-1,-2]]],23,24],[[[25,[-1,-2]]],[[60,[-1,-2]]],23,24],[[[25,[-1,-2]]],15,[],[]],[[[25,[-1,-2]]],[[61,[-1,-2]]],23,24],[[[25,[-1,-2]]],[[62,[-1,-2]]],23,24],[[[25,[-1,-2]]],16,[],[]],[[[25,[-1,-2]]],[[34,[[4,[-1]],10]]],23,24],[[[25,[-1,-2]]],[[34,[[4,[-1]],10]]],23,24],[[[25,[-1,-2]]],12,[],[]],[-1,-2,[],[]],[[[63,[-2,-3]],16],[[25,[-1,-3]]],23,[[65,[],[[64,[-1]]]]],24],[-1,-2,[],[]],[[[25,[-1,-2]],29],[[26,[[25,[-3,-2]]]]],23,[],23],[[[25,[-1,-2]],[25,[-3,-2]]],[[26,[20]]],23,[],23],[[[25,[-1,-2]]],[],[],[]],[[[25,[-1,-2]]],-3,[],[],[]],[[[25,[-1,-2]]],-2,23,24],[[[30,[16]]],[[26,[[25,[-1,-2]]]]],23,24],[[[25,[-1,-2]],32],[[34,[20,33]]],[],[]],[[[25,[-1,-2]],32],[[34,[20,33]]],[],[]],[-1,-1,[]],[[8,[63,[-2,-3]]],[[25,[-1,-3]]],23,[[65,[],[[64,[-1]]]]],24],[[8,15],[[25,[-1,-2]]],[],[]],[[8,15],[[41,[-1]]],[]],[[8,-2],[[25,[-1,56]]],23,[[67,[],[[66,[-1]]]]]],[[8,[68,[-1,-2]]],[[25,[-1,-2]]],23,24],[[8,[68,[[44,[-1]],-2]]],[[25,[9,-2]]],[],24],[[8,15],[[25,[-1,-2]]],[],[]],[[8,15],[[41,[-1]]],[]],[[8,[4,[-1]]],[[25,[-1,56]]],23],[-1,-2,[],[]],[[8,[45,[-1]]],[[25,[-1,56]]],23],[[8,[4,[[45,[-1]]]]],[[34,[[25,[-1,69]],7]]],23],[[8,[4,[[45,[[45,[-1]]]]]]],[[34,[[25,[-1,70]],7]]],23],[[[25,[-1,-2]],-3],[[41,[-1]]],23,24,[[72,[],[[71,[-2]]]]]],[8,[[26,[[30,[73]]]]]],[[[25,[-1,-2]],-3],[[41,[-1]]],23,24,[[72,[],[[71,[-2]]]]]],[[[25,[-1,-2]],-3],[[41,[-1]]],23,24,[[72,[],[[71,[-2]]]]]],[-1,-2,[],[]],[[[25,[-1,-2]],8],[[44,[[25,[-1,-2]]]]],[],[]],[[[25,[-1,-2]],8],9,[],[]],[-1,29,[]],[[[30,[16]]],29],[[[25,[-1,74]]],-1,[75,23]],[[8,-2,29],[[25,[-3,-1]]],24,[[76,[],[[71,[-1]]]]],23],[[[25,[-1,-2]]],[[77,[-1,-2]]],23,24],[[[25,[-1,-2]]],[[78,[-1,-2]]],23,24],[[[25,[-1,-2]],-3],[[26,[[25,[-1]]]]],23,[],76],[[[25,[-1,-2]],-3,79],[[26,[[25,[-1]]]]],23,[],76],[[[25,[-1,-2]],-3],[[26,[20]]],23,[],76],[[[25,[-1,-2]]],[[25,[-1,28]]],23,24],[[[25,[-1,-2]],8],9,[],[]],[[[25,[-1,-2]]],[[44,[[25,[-1,-2]]]]],[],[]],[[[25,[-1,-2]]],[[68,[-1,-2]]],23,24],[-1,50,[]],[-1,[[41,[-2]]],[],[]],[-1,-2,[],[]],[[[25,[-1,-2]]],[[34,[[45,[-1]],10]]],23,24],[[[25,[-1,-2]]],[[41,[[80,[-1,-3,-4,-5,-6]]]]],[81,23],24,82,82,82,82],[[[25,[-1,-2]]],[[41,[[83,[-1,-3,-4,-5,-6]]]]],[81,23],24,82,82,82,82],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2,51]]],[[52,[16]]],[]],[-1,[[34,[-2,51]]],[[52,[16]]],[]],[-1,-2,[[52,[16]]],[]],[-1,[[34,[-2]]],[],[]],[[[25,[-1,-2]]],[[34,[[77,[-1,-2]],11]]],23,24],[[[25,[-1,-2]]],[[34,[[78,[-1,-2]],11]]],23,24],[[[30,[16]]],29],[-1,53,[]],[8,54],[[[25,[-1,-2]],-3],-1,23,24,[[72,[],[[71,[-2]]]]]],[[[25,[-1,-2]],-3],-1,23,24,[[72,[],[[71,[-2]]]]]],[[[25,[-1,-2]],-3],[],23,24,[[72,[],[[71,[-2]]]]]],[[8,-2,29],[[25,[-3,-1]]],24,[[76,[],[[71,[-1]]]]],23],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[77,[-1,-2]]],[[59,[-1,-2]]],23,24],[[[78,[-1,-2]]],[[60,[-1,-2]]],23,24],[[[77,[-1,69]]],[[85,[-1,84,84]]],[81,23]],[[[77,[-1,56]]],[[85,[-1,84,84]]],[81,23]],[[[78,[-1,56]]],[[86,[-1,84,84]]],[81,23]],[[[78,[-1,69]]],[[86,[-1,84,84]]],[81,23]],[[[77,[-1,-2]]],[[34,[[4,[-1]],10]]],23,24],[[[78,[-1,-2]]],[[34,[[4,[-1]],10]]],23,24],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[77,[-1,-2]]],[[77,[-1,-2]]],23,24],[[-1,-2],20,[],[]],[[[77,[-1,-2]]],-3,23,24,[]],[[[78,[-1,-2]]],-3,23,24,[]],[[[77,[-1,-2]]],20,23,24],[[[78,[-1,-2]]],20,23,24],[16,[[26,[[77,[-1,-2]]]]],23,24],[16,[[26,[[78,[-1,-2]]]]],23,24],[[[77,[-1,-2]],32],36,23,24],[[[78,[-1,-2]],32],36,23,24],[-1,-1,[]],[-1,-1,[]],[[[30,[16]]],[[34,[-1,42]]],[]],[[[30,[16]]],[[34,[-1,42]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[77,[-1,-2]],-3],[[41,[-1]]],23,24,[[72,[],[[71,[-2]]]]]],[[[78,[-1,-2]],-3],[[41,[-1]]],23,24,[[72,[],[[71,[-2]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,29,[]],[-1,29,[]],[[[78,[-1,56]],-2],[[26,[[78,[-1,56]]]]],23,76],[-1,-2,[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[77,[-1,-2]]],[[41,[[80,[-1,-3,-4,-5,-6]]]]],[81,23],24,82,82,82,82],[[[78,[-1,-2]]],[[41,[[83,[-1,-3,-4,-5,-6]]]]],[81,23],24,82,82,82,82],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,53,[]],[-1,53,[]],0,0,0,0,0,0,0,0,[[[87,[],[[66,[-1]],[71,[-2]]]],8],[[25,[-1,-2]]],23,24],[[[88,[],[[66,[-1]],[71,[-2]]]],8],[[25,[-1,-2]]],23,24],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[89,[-1]]],[[89,[-1]]],[90,91]],[[[92,[-1]]],[[92,[-1]]],[90,91]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[[89,[-1]],[89,[-1]]],21,[93,91]],[[[92,[-1]],[92,[-1]]],21,[93,91]],[[[89,[-1]],[89,[-1]]],29,[94,91]],[[[92,[-1]],[92,[-1]]],29,[94,91]],[[[89,[-1]],32],36,91],[[[92,[-1]],32],36,91],[95,[[89,[-1]]],91],[-1,-1,[]],[95,[[92,[-1]]],91],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[8,6],[8,6],[[[89,[-1]],-2],20,[96,91],43],[[[92,[-1]],-2],20,[96,91],43],[-1,-2,[],[]],[-1,-2,[],[]],[-1,29,[]],[-1,29,[]],[[[89,[-1]],[89,[-1]]],[[41,[21]]],[97,91]],[[[92,[-1]],[92,[-1]]],[[41,[21]]],[97,91]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,53,[]],[-1,53,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[98,98],[99,99],[100,100],[101,101],[102,102],[103,103],[104,104],[105,105],[106,106],[107,107],[108,108],[109,109],[110,110],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[98,98],21],[[99,99],21],[[100,100],21],[[101,101],21],[[102,102],21],[[103,103],21],[[104,104],21],[[105,105],21],[[106,106],21],[[107,107],21],[[108,108],21],[[109,109],21],[[110,110],21],[[98,98],29],[[99,99],29],[[100,100],29],[[101,101],29],[[102,102],29],[[103,103],29],[[104,104],29],[[105,105],29],[[106,106],29],[[107,107],29],[[108,108],29],[[109,109],29],[[110,110],29],[[98,32],36],[[99,32],36],[[100,32],36],[[101,32],36],[[102,32],36],[[103,32],36],[[104,32],36],[[105,32],36],[[106,32],36],[[107,32],36],[[108,32],36],[[109,32],36],[[110,32],36],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[98,-1],20,43],[[99,-1],20,43],[[100,-1],20,43],[[101,-1],20,43],[[102,-1],20,43],[[103,-1],20,43],[[104,-1],20,43],[[105,-1],20,43],[[106,-1],20,43],[[107,-1],20,43],[[108,-1],20,43],[[109,-1],20,43],[[110,-1],20,43],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[[98,98],[[41,[21]]]],[[99,99],[[41,[21]]]],[[100,100],[[41,[21]]]],[[101,101],[[41,[21]]]],[[102,102],[[41,[21]]]],[[103,103],[[41,[21]]]],[[104,104],[[41,[21]]]],[[105,105],[[41,[21]]]],[[106,106],[[41,[21]]]],[[107,107],[[41,[21]]]],[[108,108],[[41,[21]]]],[[109,109],[[41,[21]]]],[[110,110],[[41,[21]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],0,0,0,0,0,0,[[111,8,48,13,112,79,113,112,14,48,48,114,114],115],[[111,8,115],115],[[111,8,115,114,114],48],[[111,8,115],48],[[111,8,115],20],[[111,8,115],48],[[111,8,115,48],114],[[111,8,115],114],[[111,8,115],31],[[111,8,115],14],[[111,8,115,31],116],[[111,8,115],114],[[111,8,115],31],[[111,8,115,114],20],[[111,8,115],114],[[111,8,115],114],[[111,8,115],114],[[111,8,115,114,114],20],[[111,8,115,31],117],[[111,8,115],114],[[111,8,115,114],13],[[111,8,115],48],[[111,8,115],48],[[111,8,115],13],[[111,8,115,31],20],[[111,8,115,114],48],[[111,8,115,31],20],[[111,8,115,114],48],[[111,8,115,114],48],[[111,8,115,114],48],[[111,8,115],118],[[111,8,115],118],[[111,8,115],118],[[111,8,115],118],[[111,8,115],118],[[111,8,115,48],118],[[111,8,115],118],[[111,8,115],118],[[111,8,48,13,112,79,113,112,14],115],[[111,8,13,112,79,113,14],115],[[111,8,115,48],48],[[111,8,115],48],[[111,8,115],118],[[111,8,115,31],48],[[111,8,115,31,31],48],[[111,8,115,114,114,31],48],0,0,0,0,0,0,0,[[111,8,13,48,13],15],[[111,8,13,48,13],15],[[111,8,57,57,57,48],15],[[111,8,15,15,15,14],15],[[111,8,13,48,13],15],[[111,8,13,48,13],15],[[111,8,13,13,48,119],15],[[111,8,13,48,120],15],[[111,8,15,31,48,48],48],[[111,8,15,31,48,48,48],48],[[111,8,15,121,114,48,14],48],[[111,8,15,48],48],[[111,8,15,118],48],[[111,8,122],48],[[111,8,15,114,48],15],[[111,8,15,123],48],[[111,8,15,31],48],[[111,8,13,118],15],[[111,8,13,14,113],118],[[111,8,48,48],48],[[111,8,54,54],118],[[111,8,14,14],118],[[111,8,14,14,113],118],[[111,8,48,48,124],48],[[111,8,13,13],48],[[111,8,15,14,121,48],48],[[111,8,15,121,14],48],[[111,8,13,13],48],[[111,8,13,14,48],15],[[111,8,15,113],48],[[8,15],48],[[111,8,15],48],[[111,8,13,48,48],15],[[8,15],48],[[111,8,15,14,48,48,48,15],15],[[111,8,48,48,114,114,114,114],118],[[111,8,13,15,13,125],15],[[111,8,13,15,15,13],15],[[111,8,15,125],48],[[111,8,114,114,48],48],[[111,8,31,31,1],48],[[111,8,126,126,1],48],[[111,8,13,15,48,13],15],[[111,8,15,48],15],[[111,8,13,13],15],[[111,8,15,125,48],48],[[111,8,15,48],13],[[111,8,15,15],48],[[111,8,15],15],[[111,8,13,13],48],[[111,8,13,13],48],[[111,8,13,15],48],[[111,8,15,15,48],15],[[111,8,15,15,48],15],[[111,8,13],114],[[111,8,48,114,127],20],[[111,8,13,48,48,13],15],[[111,8,13,48,48,13],15],[[111,8,128,129],130],[[111,8,130,128,129],20],[[111,8,13],20],[[111,8,15,14],48],[[111,8,15,14],48],[[111,8,15,14],48],[[111,8,15,14],48],[[111,8,15,14],14],[[111,8,15],14],[[111,8,48],14],[[111,8,15],14],[[111,8,14],14],[[111,8,14,31],14],[[111,8,48],14],[[111,8,13,48,48,48],15],[[111,8,15,15,48],48],[[111,8,15,48],15],[[111,8,31,114,13,14,79,113,13],15],[[111,8,31],48],[[111,8,15],48],[[111,8,48,114,14,48],15],[[111,8,15],15],[[111,8,15],15],[[111,8,48,48],131],[[111,8,14,14],131],[[111,8,13,31],48],[[111,8,15],15],[[111,8,13,15],20],[[111,8,13,15],48],[[111,8,13,79],15],[[111,8,15,121],48],[[111,8,15,14,48,48,48,15],15],[[111,8,13,14,48],15],[[111,8,15,14,15],15],[[111,8,15,14,114,114],15],[[111,8,48,48,48],15],[[111,8,48,48,14,31],15],[[111,8,132,14,114,31],15],[[111,8,15],15],[[111,8,15,14,114],15],[[111,8,15,14],15],[[111,8,31,114,14,114,31],15],[[111,8,15],15],[[111,8,15,14,118,14,48,114,13,15],48],[[111,8,14,48],133],[[111,8],48],[[111,8,13,14,48],15],[[111,8],134],[[111,8],134],[[111,8],15],[[111,8,15,57],57],[[111,8,13,114],121],[[111,8,13],48],[[111,8,135],20],[[111,8,15,15],15],[[111,8,48,114],15],[[111,8,15,136],48],[[111,8,15,114,48],48],[[111,8,31,14],20],[[111,8,31,14],20],[[111,8,15,48],15],[[111,8,15],15],[[111,8,15,48],15],[[111,8,13,15],15],[[111,8,13,15,48,13],15],[[111,8,137],20],[[111,8,137,13,48],20],[[111,8,15,15],15],[[111,8,15,15,13],15],[[111,8,13,48,13],15],[[111,8,13,48,48,13],15],[[111,8,13,48,13],15],[[111,8,13],14],[[111,8,13,13],48],[[111,8,48,48],48],[[111,8,114,48],114],[[111,8,138,114,48,13],15],[[111,8,54,48,114,48,114,121,48,48,15],15],[[111,8,13,79],15],[[111,8,15],15],[[111,8,54,14,48,114,114,121,48,15],15],[[111,8,13,79,14,48],15],[[111,8,13,136,79],15],[[111,8,13],15],[[111,8,15,48],48],[[111,8,13],31],[[111,8,15,79],48],[[111,8,15,13],48],[[111,8,114,48],114],[[111,8,13,13,48,119],48],[[111,8,13,48,48,13],15],[[111,8,14,14],14],[[111,8,13,48,13],15],[[111,8,13,15,15],15],[[111,8,13,15,15,125],15],[[111,8,15],48],[[111,8,15],114],[[111,8,13,79],15],[[111,8,14,48,124],48],[[111,8,14,48,133],48],[[111,8,14],48],[[111,8,13,118],20],[[111,8,122],48],[[111,8,13,15,48],15],[[111,8,13,15],15],[[111,8,13,136,48,79],15],[[111,8,13],48],[[111,8,114,13,114,14],14],[[111,8,13],15],[[111,8,13,48,13],15],[[111,8,121,14,15],15],[[111,8,15,121],20],[[111,8,15],15],[[111,8,48,13],124],[[111,8,13,15,139,15],15],[[111,8,15,121],48],[[111,8,15,119],48],[[111,8,13,15],48],[[111,8,15],20],[[111,8,13,14,48,15],48],[[111,8,15],48],[[111,8,15,48],20],[[111,8,13,13],48],[[111,8,13,13],48],[[111,8,15],114],[[111,8,13,48,120],48],[[111,8,15,120],48],[[111,8,13],15],[[111,8,13,48,48,13,48],15],[[111,8,13,48,48,13],15],[[111,8,13,48,48],15],[[111,8,13,15,48,13,125],15],[[111,8,128,140],130],[[111,8,141,128,140],20],[[111,8,13,132,31,31],48],[[111,8,13],15],[[111,8,13,79],15],[[111,8,13,48,48,48,48,13],15],[[111,8,13,136],15],0,[[111,8,48],15],[[111,8,48,48],48],[[111,8,13,48],20],[[111,8,48],48],[[111,8,13,14,54],15],[[111,8,15,15,15],15],[[111,8,13],48],[[111,8,13],31],[[111,8,48,114,14,48],15],0,0,0,0,0,0,0,0,[[111,8,121],20],[[111,8,1],121],[[111,8,1,1],121],[[111,8,121,1],121],[[111,8,142,121,121],142],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[111,8],121],[[111,8,48],20],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[111,8,143],54],[-1,-2,[],[]],[-1,-2,[],[]],[-1,29,[]],[-1,29,[]],[-1,[[41,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,53,[]],[-1,53,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[13,13],[14,14],[144,144],[135,135],[145,145],[136,136],[123,123],[146,146],[147,147],[115,115],[138,138],[122,122],[148,148],[137,137],[149,149],[150,150],[151,151],0,[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[115,32],36],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],0,0,[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[152,152],[153,153],[154,154],[79,79],[124,124],[120,120],[139,139],[128,128],[155,155],[119,119],[113,113],[125,125],[129,129],[140,140],[127,127],[156,156],[157,157],[158,158],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[155,155],21],0,0,[[79,79],29],[[124,124],29],[[120,120],29],[[139,139],29],[[128,128],29],[[155,155],29],[[119,119],29],[[113,113],29],[[125,125],29],[[158,158],29],[[152,32],36],[[153,32],36],[[154,32],36],[[79,32],36],[[124,32],36],[[120,32],36],[[139,32],36],[[128,32],36],[[155,32],36],[[119,32],36],[[113,32],36],[[129,32],36],[[140,32],36],[[127,32],36],[[156,32],36],[[157,32],36],[[158,32],36],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[79,-1],20,43],[[124,-1],20,43],[[120,-1],20,43],[[139,-1],20,43],[[128,-1],20,43],[[155,-1],20,43],[[119,-1],20,43],[[113,-1],20,43],[[125,-1],20,43],[[158,-1],20,43],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[155,155],[[41,[21]]]],0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],0,0,0,0,0,[[159,8,31,114,114,121],20],[[159,8,31,114,114,121],20],[[159,8,147,113,13,15,14],48],[[159,8,31,114,114,121],20],[[159,8,31,114,114,121],20],[[159,8,31,114,114,121],20],[[159,8,31,114,114,121],20],[[159,8,160,121,31,48,48,48,48,31,31,48],15],[[159,8,160,121,31,48,48,48,48,31,31,48,31],15],[[159,8,147,121,31,48,48,48,48,31,31,48,31,31],48],[[159,8,31,114,114,121],20],[[159,8,31,114,114,121],20],[[159,8,147,15,15,13],48],[[159,8,31,48,48,15],48],[[159,8,31,114,114,121],20],[[159,8,31,114,114,121],20],[[159,8,31,114,114,121],20],[[159,8,31,114,114,121],20],[[159,8,31,114,114,121],20],[[159,8,147,14,160,14,121],48],[[159,8,147,48,160,48,121],48],[[159,8,147,160,48,160],48],[[159,8,121,1],48],[[159,8,147,113,13,14],48],[[159,8,48,15,48],48],[[159,8],20],[[159,8,31,114,114,121],20],[[159,8,31,114,114,121],20],[[159,8,31,114,114,121],20],[[159,8,31,114,114,121],20],[[159,8,31,114,114,121],20],[[159,8,31,114,114,121],20],[[159,8,31,114,114,121],20],[[159,8,31,114,114,121],20],[[159,8,31,114,114,121],20],[[159,8,31,114,114,121],20],[[159,8,31,114,114,121],20],[[159,8,31,114,114,121],20],[[159,8,31,114,114,121],20],[[159,8],48],[[159,8,31,114,114,121],20],[[159,8,48,15,48,48],48],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,29,[]],[-1,[[41,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,53,[]]],"c":[],"p":[[1,"usize"],[1,"array"],[5,"Dim",2250],[1,"slice"],[5,"IxDynImpl",2251],[5,"PyArrayDescr",0],[5,"FromVecError",0],[5,"Python",2252],[8,"PyObject",2253],[5,"NotContiguousError",0],[6,"BorrowError",0],[5,"PyUntypedArray",0],[5,"PyArrayObject",1182],[5,"PyArray_Descr",1182],[5,"PyObject",2254],[5,"PyAny",2255],[1,"u8"],[5,"PyFixedString",0],[5,"PyFixedUnicode",0],[1,"tuple"],[6,"Ordering",2256],[5,"PyArrayLike",0],[10,"Element",0],[10,"Dimension",2257],[5,"PyArray",315],[8,"PyResult",2258],[1,"str"],[8,"IxDyn",0],[1,"bool"],[5,"Bound",2253],[8,"c_char",2259],[5,"Formatter",2260],[5,"Error",2260],[6,"Result",2261],[5,"TypeMustMatch",0],[8,"Result",2260],[5,"AllowTypeChange",0],[10,"Debug",2260],[8,"Py_UCS1",2262],[8,"Py_UCS4",2262],[6,"Option",2263],[5,"PyErr",2258],[10,"Hasher",2264],[5,"Py",2253],[5,"Vec",2265],[10,"ToPyObject",2266],[10,"Sized",2267],[8,"c_int",2259],[1,"isize"],[5,"String",2268],[5,"PyDowncastError",2258],[10,"Into",2269],[5,"TypeId",2270],[5,"PyTypeObject",2271],[5,"PyType",2272],[8,"Ix1",0],[1,"f64"],[10,"AsPrimitive",2273],[8,"ArrayView",2274],[8,"ArrayViewMut",2274],[8,"RawArrayView",2274],[8,"RawArrayViewMut",2274],[5,"ArrayBase",2274],[17,"Elem"],[10,"Data",2275],[17,"Item"],[10,"IntoIterator",2276],[8,"Array",2274],[8,"Ix2",0],[8,"Ix3",0],[17,"Dim"],[10,"NpyIndex",465],[5,"PyModule",2277],[8,"Ix0",2278],[10,"Copy",2267],[10,"IntoDimension",2279],[5,"PyReadonlyArray",399],[5,"PyReadwriteArray",399],[6,"NPY_ORDER",1714],[8,"MatrixView",2280],[10,"Scalar",2281],[10,"Dim",2282],[8,"MatrixViewMut",2280],[5,"Dyn",2282],[8,"DMatrixView",2283],[8,"DMatrixViewMut",2283],[10,"IntoPyArray",465],[10,"ToPyArray",465],[5,"Datetime",475],[10,"Clone",2284],[10,"Unit",475],[5,"Timedelta",475],[10,"Ord",2256],[10,"PartialEq",2256],[1,"i64"],[10,"Hash",2264],[10,"PartialOrd",2256],[5,"Years",523],[5,"Months",523],[5,"Weeks",523],[5,"Days",523],[5,"Hours",523],[5,"Minutes",523],[5,"Seconds",523],[5,"Milliseconds",523],[5,"Microseconds",523],[5,"Nanoseconds",523],[5,"Picoseconds",523],[5,"Femtoseconds",523],[5,"Attoseconds",523],[5,"PyArrayAPI",788],[8,"npy_uint32",1714],[6,"NPY_CASTING",1714],[8,"npy_intp",1714],[5,"NpyIter",1182],[8,"NpyIter_GetMultiIndexFunc",1182],[8,"NpyIter_IterNextFunc",1182],[8,"npy_bool",1714],[6,"NPY_SELECTKIND",1714],[6,"NPY_SORTKIND",1714],[8,"c_void",2259],[5,"PyArrayMultiIterObject",1182],[5,"PyArray_Chunk",1182],[6,"NPY_SCALARKIND",1714],[6,"NPY_CLIPMODE",1714],[8,"npy_ucs4",1714],[5,"npy_stride_sort_item",1714],[6,"NPY_DATETIMEUNIT",1714],[5,"npy_datetimestruct",1714],[8,"npy_datetime",1714],[8,"c_uchar",2259],[6,"FILE",2285],[8,"PyArray_VectorUnaryFunc",1182],[8,"c_uint",2259],[5,"PyArray_ArrFuncs",1182],[5,"PyArray_Dims",1182],[5,"PyArrayMapIterObject",1182],[5,"PyArrayIterObject",1182],[6,"NPY_SEARCHSIDE",1714],[5,"npy_timedeltastruct",1714],[8,"npy_timedelta",1714],[8,"PyDataMem_EventHookFunc",1182],[6,"NpyTypes",788],[5,"PyArray_ArrayDescr",1182],[5,"PyArrayFlagsObject",1182],[5,"PyArrayInterface",1182],[5,"PyUFuncObject",1182],[5,"PyArrayNeighborhoodIterObject",1182],[5,"NpyAuxData",1182],[5,"PyArray_DatetimeMetaData",1182],[5,"PyArray_DatetimeDTypeMetaData",1182],[5,"npy_cdouble",1714],[5,"npy_cfloat",1714],[5,"npy_clongdouble",1714],[6,"NPY_TYPES",1714],[6,"NPY_TYPECHAR",1714],[6,"NPY_TYPEKINDCHAR",1714],[6,"NPY_BYTEORDER_CHAR",1714],[5,"PyUFuncAPI",2195],[8,"PyUFuncGenericFunction",1182],[8,"Complex32",0],[8,"Complex64",0],[8,"PyArray_GetItemFunc",1182],[8,"PyArray_SetItemFunc",1182],[8,"PyArray_CopySwapNFunc",1182],[8,"PyArray_CopySwapFunc",1182],[8,"PyArray_NonzeroFunc",1182],[8,"PyArray_CompareFunc",1182],[8,"PyArray_ArgFunc",1182],[8,"PyArray_DotFunc",1182],[8,"PyArray_ScanFunc",1182],[8,"PyArray_FromStrFunc",1182],[8,"PyArray_FillFunc",1182],[8,"PyArray_SortFunc",1182],[8,"PyArray_ArgSortFunc",1182],[8,"PyArray_PartitionFunc",1182],[8,"PyArray_ArgPartitionFunc",1182],[8,"PyArray_FillWithScalarFunc",1182],[8,"PyArray_ScalarKindFunc",1182],[8,"PyArray_FastClipFunc",1182],[8,"PyArray_FastPutmaskFunc",1182],[8,"PyArray_FastTakeFunc",1182],[8,"PyUFunc_MaskedStridedInnerLoopFunc",1182],[8,"PyUFunc_TypeResolutionFunc",1182],[8,"PyUFunc_LegacyInnerLoopSelectionFunc",1182],[8,"PyUFunc_MaskedInnerLoopSelectionFunc",1182],[8,"npy_iter_get_dataptr_t",1182],[8,"NpyAuxData_FreeFunc",1182],[8,"NpyAuxData_CloneFunc",1182],[8,"npy_complex128",1714],[8,"npy_complex64",1714],[8,"npy_complex256",1714]],"b":[[129,"impl-Display-for-PyArrayDescr"],[130,"impl-Debug-for-PyArrayDescr"],[131,"impl-Display-for-PyUntypedArray"],[132,"impl-Debug-for-PyUntypedArray"],[136,"impl-Debug-for-FromVecError"],[137,"impl-Display-for-FromVecError"],[138,"impl-Display-for-NotContiguousError"],[139,"impl-Debug-for-NotContiguousError"],[140,"impl-Debug-for-BorrowError"],[141,"impl-Display-for-BorrowError"],[142,"impl-Display-for-PyFixedString%3CN%3E"],[143,"impl-Debug-for-PyFixedString%3CN%3E"],[144,"impl-Display-for-PyFixedUnicode%3CN%3E"],[145,"impl-Debug-for-PyFixedUnicode%3CN%3E"],[200,"impl-IntoPy%3CPy%3CPyAny%3E%3E-for-PyUntypedArray"],[201,"impl-IntoPy%3CPy%3CPyUntypedArray%3E%3E-for-%26PyUntypedArray"],[343,"impl-Debug-for-PyArray%3CT,+D%3E"],[344,"impl-Display-for-PyArray%3CT,+D%3E"],[364,"impl-IntoPy%3CPy%3CPyArray%3CT,+D%3E%3E%3E-for-%26PyArray%3CT,+D%3E"],[365,"impl-IntoPy%3CPy%3CPyAny%3E%3E-for-PyArray%3CT,+D%3E"],[419,"impl-PyReadonlyArray%3C\'py,+N,+Dim%3C%5Busize;+2%5D%3E%3E"],[420,"impl-PyReadonlyArray%3C\'py,+N,+Dim%3C%5Busize;+1%5D%3E%3E"],[421,"impl-PyReadwriteArray%3C\'py,+N,+Dim%3C%5Busize;+1%5D%3E%3E"],[422,"impl-PyReadwriteArray%3C\'py,+N,+Dim%3C%5Busize;+2%5D%3E%3E"]],"a":{"nalgebra":[383,384,419,420,421,422,457,458]}}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
