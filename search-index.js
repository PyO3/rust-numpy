var searchIndex = JSON.parse('{\
"numpy":{"doc":"This crate provides Rust interfaces for NumPy C APIs, …","t":"DNEGGIDSCFGFGFGFGFGFGFGDNCCCCCCCCCCCDCDGGGGGGGGDDCCCCCCCCCCCCCCCCCCDCCDLLLLAOLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLAALLLFFLFOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLCKLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLCLCLLLALLLLLOCLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDGGGGGGGGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDGGGGGGGGDGGGGGGGGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLQQIQQIIIKKSDDSILLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLADDDDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAAAAANLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLEHDNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNLLLLLLLLLNNNNNNNNLLLLLNNNNNNNNNNNNNNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRDGGDGGDDDDDDDGGGDDDGGGDDDDGGGGGGGGGGGGGGGGGDGGGGMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMGMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLMMMMMMMMNNNNNNNEENNNNNNNENNNNNNNENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNSNNNNNNNNSENNNNENNEENNNENNNNNNEEENNNNNNNNNNNNNNNNNNNMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMGGDDGDGGGGDGGGGGGGGGGGGGGGGGGDGDGGGGGGGGGGGLMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMHDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["AllowTypeChange","AlreadyBorrowed","BorrowError","Complex32","Complex64","Element","FromVecError","IS_COPY","IntoPyArray","Ix1","Ix1","Ix2","Ix2","Ix3","Ix3","Ix4","Ix4","Ix5","Ix5","Ix6","Ix6","IxDyn","IxDyn","NotContiguousError","NotWriteable","NpyIndex","PY_ARRAY_API","PY_UFUNC_API","PyArray","PyArray0","PyArray1","PyArray2","PyArray3","PyArray4","PyArray5","PyArray6","PyArrayDescr","PyArrayDyn","PyArrayLike","PyArrayLike0","PyArrayLike1","PyArrayLike2","PyArrayLike3","PyArrayLike4","PyArrayLike5","PyArrayLike6","PyArrayLikeDyn","PyFixedString","PyFixedUnicode","PyReadonlyArray","PyReadonlyArray0","PyReadonlyArray1","PyReadonlyArray2","PyReadonlyArray3","PyReadonlyArray4","PyReadonlyArray5","PyReadonlyArray6","PyReadonlyArrayDyn","PyReadwriteArray","PyReadwriteArray0","PyReadwriteArray1","PyReadwriteArray2","PyReadwriteArray3","PyReadwriteArray4","PyReadwriteArray5","PyReadwriteArray6","PyReadwriteArrayDyn","PyUntypedArray","ToNpyDims","ToPyArray","TypeMustMatch","alignment","arguments","arguments","arguments","array","array","as_array_ptr","as_dtype_ptr","as_ptr","as_ptr","as_ref","as_ref","base","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","byteorder","char","clone","clone","clone_into","clone_into","cmp","cmp","convert","datetime","deref","deref","deref","dot","dtype","dtype","einsum","einsum","eq","eq","equivalent","equivalent","extract","extract","extract","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","get_array_module","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_field","has_fields","has_object","has_subarray","hash","hash","inner","into","into","into","into","into","into","into","into","into","into","into_dtype_ptr","into_py","into_py","into_py","is_aligned_struct","is_c_contiguous","is_contiguous","is_empty","is_equiv_to","is_fortran_contiguous","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_native_byteorder","is_type_of","is_type_of","itemsize","kind","len","nalgebra","names","ndarray","ndim","ndim","new","npyffi","num","object","of","partial_cmp","partial_cmp","pyarray","pyo3","shape","shape","strides","to_object","to_object","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_exact","try_from_exact","try_from_unchecked","try_from_unchecked","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_object_raw","type_object_raw","typeobj","PyArray","PyArray0","PyArray1","PyArray2","PyArray3","PyArray4","PyArray5","PyArray6","PyArrayDyn","arange","as_array","as_array_mut","as_ptr","as_raw_array","as_raw_array_mut","as_ref","as_slice","as_slice_mut","as_untyped","borrow","borrow_from_array","borrow_mut","cast","copy_to","data","deref","dims","extract","fmt","fmt","from","from_array","from_borrowed_ptr","from_borrowed_ptr_or_opt","from_iter","from_owned_array","from_owned_object_array","from_owned_ptr","from_owned_ptr_or_opt","from_slice","from_subset","from_vec","from_vec2","from_vec3","get","get_array_module","get_mut","get_owned","into","into_py","into_py","is_in_subset","is_type_of","item","new","readonly","readwrite","reshape","reshape_with_order","resize","to_dyn","to_object","to_owned","to_owned_array","to_string","to_subset","to_subset_unchecked","to_vec","try_as_matrix","try_as_matrix_mut","try_from","try_from","try_from_exact","try_from_unchecked","try_into","try_readonly","try_readwrite","type_id","type_object_raw","uget","uget_mut","uget_raw","zeros","PyReadonlyArray","PyReadonlyArray0","PyReadonlyArray1","PyReadonlyArray2","PyReadonlyArray3","PyReadonlyArray4","PyReadonlyArray5","PyReadonlyArray6","PyReadonlyArrayDyn","PyReadwriteArray","PyReadwriteArray0","PyReadwriteArray1","PyReadwriteArray2","PyReadwriteArray3","PyReadwriteArray4","PyReadwriteArray5","PyReadwriteArray6","PyReadwriteArrayDyn","as_array","as_array_mut","as_matrix","as_matrix","as_matrix_mut","as_matrix_mut","as_slice","as_slice_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","drop","drop","extract","extract","fmt","fmt","from","from","from_subset","from_subset","get","get_mut","into","into","is_in_subset","is_in_subset","resize","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_as_matrix","try_as_matrix_mut","try_from","try_from","try_into","try_into","type_id","type_id","Dim","Dim","IntoPyArray","Item","Item","NpyIndex","ToNpyDims","ToPyArray","into_pyarray","to_pyarray","ABBREV","Datetime","Timedelta","UNIT","Unit","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from","from","from_subset","from_subset","get_dtype","get_dtype","hash","hash","into","into","is_in_subset","is_in_subset","partial_cmp","partial_cmp","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","units","Attoseconds","Days","Femtoseconds","Hours","Microseconds","Milliseconds","Minutes","Months","Nanoseconds","Picoseconds","Seconds","Weeks","Years","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","array","flags","objects","types","ufunc","NPY_NUMUSERTYPES","NpyIter_AdvancedNew","NpyIter_Copy","NpyIter_CreateCompatibleStrides","NpyIter_Deallocate","NpyIter_DebugPrint","NpyIter_EnableExternalLoop","NpyIter_GetAxisStrideArray","NpyIter_GetBufferSize","NpyIter_GetDataPtrArray","NpyIter_GetDescrArray","NpyIter_GetGetMultiIndex","NpyIter_GetIndexPtr","NpyIter_GetInitialDataPtrArray","NpyIter_GetInnerFixedStrideArray","NpyIter_GetInnerLoopSizePtr","NpyIter_GetInnerStrideArray","NpyIter_GetIterIndex","NpyIter_GetIterIndexRange","NpyIter_GetIterNext","NpyIter_GetIterSize","NpyIter_GetIterView","NpyIter_GetNDim","NpyIter_GetNOp","NpyIter_GetOperandArray","NpyIter_GetReadFlags","NpyIter_GetShape","NpyIter_GetWriteFlags","NpyIter_GotoIndex","NpyIter_GotoIterIndex","NpyIter_GotoMultiIndex","NpyIter_HasDelayedBufAlloc","NpyIter_HasExternalLoop","NpyIter_HasIndex","NpyIter_HasMultiIndex","NpyIter_IsBuffered","NpyIter_IsFirstVisit","NpyIter_IsGrowInner","NpyIter_IterationNeedsAPI","NpyIter_MultiNew","NpyIter_New","NpyIter_RemoveAxis","NpyIter_RemoveMultiIndex","NpyIter_RequiresBuffering","NpyIter_Reset","NpyIter_ResetBasePointers","NpyIter_ResetToIterIndexRange","NpyTypes","PY_ARRAY_API","PyArrayAPI","PyArrayDescr_Type","PyArrayFlags_Type","PyArrayIter_Type","PyArrayMultiIter_Type","PyArray_All","PyArray_Any","PyArray_Arange","PyArray_ArangeObj","PyArray_ArgMax","PyArray_ArgMin","PyArray_ArgPartition","PyArray_ArgSort","PyArray_As1D","PyArray_As2D","PyArray_AsCArray","PyArray_AxisConverter","PyArray_BoolConverter","PyArray_Broadcast","PyArray_BroadcastToShape","PyArray_BufferConverter","PyArray_ByteorderConverter","PyArray_Byteswap","PyArray_CanCastArrayTo","PyArray_CanCastSafely","PyArray_CanCastScalar","PyArray_CanCastTo","PyArray_CanCastTypeTo","PyArray_CanCoerceScalar","PyArray_CastAnyTo","PyArray_CastScalarDirect","PyArray_CastScalarToCtype","PyArray_CastTo","PyArray_CastToType","PyArray_CastingConverter","PyArray_Check","PyArray_CheckAnyScalarExact","PyArray_CheckAxis","PyArray_CheckExact","PyArray_CheckFromAny","PyArray_CheckStrides","PyArray_Choose","PyArray_Clip","PyArray_ClipmodeConverter","PyArray_CompareLists","PyArray_CompareString","PyArray_CompareUCS4","PyArray_Compress","PyArray_Concatenate","PyArray_Conjugate","PyArray_ConvertClipmodeSequence","PyArray_ConvertToCommonType","PyArray_Converter","PyArray_CopyAndTranspose","PyArray_CopyAnyInto","PyArray_CopyInto","PyArray_CopyObject","PyArray_Correlate","PyArray_Correlate2","PyArray_CountNonzero","PyArray_CreateSortedStridePerm","PyArray_CumProd","PyArray_CumSum","PyArray_DatetimeStructToDatetime","PyArray_DatetimeToDatetimeStruct","PyArray_DebugPrint","PyArray_DescrAlignConverter","PyArray_DescrAlignConverter2","PyArray_DescrConverter","PyArray_DescrConverter2","PyArray_DescrFromObject","PyArray_DescrFromScalar","PyArray_DescrFromType","PyArray_DescrFromTypeObject","PyArray_DescrNew","PyArray_DescrNewByteorder","PyArray_DescrNewFromType","PyArray_Diagonal","PyArray_Dump","PyArray_Dumps","PyArray_EinsteinSum","PyArray_ElementFromName","PyArray_ElementStrides","PyArray_Empty","PyArray_EnsureAnyArray","PyArray_EnsureArray","PyArray_EquivTypenums","PyArray_EquivTypes","PyArray_FailUnlessWriteable","PyArray_FieldNames","PyArray_FillObjectArray","PyArray_FillWithScalar","PyArray_Flatten","PyArray_Free","PyArray_FromAny","PyArray_FromArray","PyArray_FromArrayAttr","PyArray_FromBuffer","PyArray_FromDims","PyArray_FromDimsAndDataAndDescr","PyArray_FromFile","PyArray_FromInterface","PyArray_FromIter","PyArray_FromScalar","PyArray_FromString","PyArray_FromStructInterface","PyArray_GetArrayParamsFromObject","PyArray_GetCastFunc","PyArray_GetEndianness","PyArray_GetField","PyArray_GetNDArrayCFeatureVersion","PyArray_GetNDArrayCVersion","PyArray_GetNumericOps","PyArray_GetPriority","PyArray_GetPtr","PyArray_INCREF","PyArray_InitArrFuncs","PyArray_InnerProduct","PyArray_IntTupleFromIntp","PyArray_IntpConverter","PyArray_IntpFromSequence","PyArray_Item_INCREF","PyArray_Item_XDECREF","PyArray_IterAllButAxis","PyArray_IterNew","PyArray_LexSort","PyArray_MapIterArray","PyArray_MapIterArrayCopyIfOverlap","PyArray_MapIterNext","PyArray_MapIterSwapAxes","PyArray_MatrixProduct","PyArray_MatrixProduct2","PyArray_Max","PyArray_Mean","PyArray_Min","PyArray_MinScalarType","PyArray_MoveInto","PyArray_MultiplyIntList","PyArray_MultiplyList","PyArray_NeighborhoodIterNew","PyArray_New","PyArray_NewCopy","PyArray_NewFlagsObject","PyArray_NewFromDescr","PyArray_NewLikeArray","PyArray_Newshape","PyArray_Nonzero","PyArray_ObjectType","PyArray_One","PyArray_OrderConverter","PyArray_OutputConverter","PyArray_OverflowMultiplyList","PyArray_Partition","PyArray_Prod","PyArray_PromoteTypes","PyArray_Ptp","PyArray_PutMask","PyArray_PutTo","PyArray_PyIntAsInt","PyArray_PyIntAsIntp","PyArray_Ravel","PyArray_RegisterCanCast","PyArray_RegisterCastFunc","PyArray_RegisterDataType","PyArray_RemoveAxesInPlace","PyArray_RemoveSmallest","PyArray_Repeat","PyArray_Reshape","PyArray_Resize","PyArray_ResolveWritebackIfCopy","PyArray_ResultType","PyArray_Return","PyArray_Round","PyArray_Scalar","PyArray_ScalarAsCtype","PyArray_ScalarFromObject","PyArray_ScalarKind","PyArray_SearchSorted","PyArray_SearchsideConverter","PyArray_SelectkindConverter","PyArray_SetBaseObject","PyArray_SetDatetimeParseFunction","PyArray_SetField","PyArray_SetNumericOps","PyArray_SetStringFunction","PyArray_SetUpdateIfCopyBase","PyArray_SetWritebackIfCopyBase","PyArray_Size","PyArray_Sort","PyArray_SortkindConverter","PyArray_Squeeze","PyArray_Std","PyArray_Sum","PyArray_SwapAxes","PyArray_TakeFrom","PyArray_TimedeltaStructToTimedelta","PyArray_TimedeltaToTimedeltaStruct","PyArray_ToFile","PyArray_ToList","PyArray_ToString","PyArray_Trace","PyArray_Transpose","PyArray_Type","PyArray_TypeObjectFromType","PyArray_TypestrConvert","PyArray_UpdateFlags","PyArray_ValidType","PyArray_View","PyArray_Where","PyArray_XDECREF","PyArray_Zero","PyArray_Zeros","PyBigArray_Type","PyBoolArrType_Type","PyByteArrType_Type","PyCDoubleArrType_Type","PyCFloatArrType_Type","PyCLongDoubleArrType_Type","PyCharacterArrType_Type","PyComplexFloatingArrType_Type","PyDataMem_FREE","PyDataMem_NEW","PyDataMem_NEW_ZEROED","PyDataMem_RENEW","PyDataMem_SetEventHook","PyDoubleArrType_Type","PyFlexibleArrType_Type","PyFloatArrType_Type","PyFloatingArrType_Type","PyGenericArrType_Type","PyInexactArrType_Type","PyIntArrType_Type","PyIntegerArrType_Type","PyLongArrType_Type","PyLongDoubleArrType_Type","PyLongLongArrType_Type","PyNumberArrType_Type","PyObjectArrType_Type","PyShortArrType_Type","PySignedIntegerArrType_Type","PyStringArrType_Type","PyUByteArrType_Type","PyUIntArrType_Type","PyULongArrType_Type","PyULongLongArrType_Type","PyUShortArrType_Type","PyUnicodeArrType_Type","PyUnsignedIntegerArrType_Type","PyVoidArrType_Type","_PyArrayScalar_BoolValues","_PyArray_GetSigintBuf","_PyArray_SigintHandler","borrow","borrow","borrow_mut","borrow_mut","from","from","from_subset","from_subset","get_type_object","into","into","is_in_subset","is_in_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","NPY_ALIGNED_STRUCT","NPY_ARRAY_ALIGNED","NPY_ARRAY_BEHAVED","NPY_ARRAY_BEHAVED_NS","NPY_ARRAY_CARRAY","NPY_ARRAY_CARRAY_RO","NPY_ARRAY_C_CONTIGUOUS","NPY_ARRAY_DEFAULT","NPY_ARRAY_ELEMENTSTRIDES","NPY_ARRAY_ENSUREARRAY","NPY_ARRAY_ENSURECOPY","NPY_ARRAY_FARRAY","NPY_ARRAY_FARRAY_RO","NPY_ARRAY_FORCECAST","NPY_ARRAY_F_CONTIGUOUS","NPY_ARRAY_INOUT_ARRAY","NPY_ARRAY_INOUT_ARRAY2","NPY_ARRAY_INOUT_FARRAY","NPY_ARRAY_INOUT_FARRAY2","NPY_ARRAY_IN_ARRAY","NPY_ARRAY_IN_FARRAY","NPY_ARRAY_NOTSWAPPED","NPY_ARRAY_OUT_ARRAY","NPY_ARRAY_OUT_FARRAY","NPY_ARRAY_OWNDATA","NPY_ARRAY_UPDATEIFCOPY","NPY_ARRAY_UPDATE_ALL","NPY_ARRAY_WRITEABLE","NPY_ARRAY_WRITEBACKIFCOPY","NPY_FROM_FIELDS","NPY_ITEM_HASOBJECT","NPY_ITEM_IS_POINTER","NPY_ITEM_REFCOUNT","NPY_ITER_ALIGNED","NPY_ITER_ALLOCATE","NPY_ITER_ARRAYMASK","NPY_ITER_BUFFERED","NPY_ITER_COMMON_DTYPE","NPY_ITER_CONTIG","NPY_ITER_COPY","NPY_ITER_COPY_IF_OVERLAP","NPY_ITER_C_INDEX","NPY_ITER_DELAY_BUFALLOC","NPY_ITER_DONT_NEGATE_STRIDES","NPY_ITER_EXTERNAL_LOOP","NPY_ITER_F_INDEX","NPY_ITER_GLOBAL_FLAGS","NPY_ITER_GROWINNER","NPY_ITER_MULTI_INDEX","NPY_ITER_NBO","NPY_ITER_NO_BROADCAST","NPY_ITER_NO_SUBTYPE","NPY_ITER_OVERLAP_ASSUME_ELEMENTWISE","NPY_ITER_PER_OP_FLAGS","NPY_ITER_RANGED","NPY_ITER_READONLY","NPY_ITER_READWRITE","NPY_ITER_REDUCE_OK","NPY_ITER_REFS_OK","NPY_ITER_UPDATEIFCOPY","NPY_ITER_VIRTUAL","NPY_ITER_WRITEMASKED","NPY_ITER_WRITEONLY","NPY_ITER_ZEROSIZE_OK","NPY_LIST_PICKLE","NPY_NEEDS_INIT","NPY_NEEDS_PYAPI","NPY_OBJECT_DTYPE_FLAGS","NPY_USE_GETITEM","NPY_USE_SETITEM","NpyAuxData","NpyAuxData_CloneFunc","NpyAuxData_FreeFunc","NpyIter","NpyIter_GetMultiIndexFunc","NpyIter_IterNextFunc","PyArrayFlagsObject","PyArrayInterface","PyArrayIterObject","PyArrayMapIterObject","PyArrayMultiIterObject","PyArrayNeighborhoodIterObject","PyArrayObject","PyArray_ArgFunc","PyArray_ArgPartitionFunc","PyArray_ArgSortFunc","PyArray_ArrFuncs","PyArray_ArrayDescr","PyArray_Chunk","PyArray_CompareFunc","PyArray_CopySwapFunc","PyArray_CopySwapNFunc","PyArray_DatetimeDTypeMetaData","PyArray_DatetimeMetaData","PyArray_Descr","PyArray_Dims","PyArray_DotFunc","PyArray_FastClipFunc","PyArray_FastPutmaskFunc","PyArray_FastTakeFunc","PyArray_FillFunc","PyArray_FillWithScalarFunc","PyArray_FromStrFunc","PyArray_GetItemFunc","PyArray_NonzeroFunc","PyArray_PartitionFunc","PyArray_ScalarKindFunc","PyArray_ScanFunc","PyArray_SetItemFunc","PyArray_SortFunc","PyArray_VectorUnaryFunc","PyDataMem_EventHookFunc","PyUFuncGenericFunction","PyUFuncObject","PyUFunc_LegacyInnerLoopSelectionFunc","PyUFunc_MaskedInnerLoopSelectionFunc","PyUFunc_MaskedStridedInnerLoopFunc","PyUFunc_TypeResolutionFunc","_internal_iter","ait","alignment","ao","ao","argmax","argmin","argsort","arr","array","backstrides","backstrides","base","base","base","base","base","baseoffset","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","bounds","byteorder","c_metadata","cancastscalarkindto","cancastto","cast","castdict","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compare","consec","constant","contiguous","contiguous","coordinates","coordinates","copyswap","copyswapn","core_dim_ixs","core_enabled","core_num_dim_ix","core_num_dims","core_offsets","core_signature","data","data","data","dataptr","dataptr","dataptr","descr","descr","dimensions","dimensions","dimensions","dimensions","dims_m1","dims_m1","doc","dotfunc","elsize","extra_op","extra_op_dtype","extra_op_flags","extra_op_iter","extra_op_next","extra_op_ptrs","f","factors","factors","fancy_dims","fancy_strides","fastclip","fastputmask","fasttake","fields","fill","fillwithscalar","flags","flags","flags","flags","flags","fmt","free","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","fromstr","functions","getitem","hash","identity","index","index","index","index","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","itemsize","iter_count","iter_flags","iteraxes","iters","kind","legacy_inner_loop_selector","len","len","limits","limits","limits_sizes","limits_sizes","masked_inner_loop_selector","meta","metadata","mode","name","names","nargs","nd","nd","nd","nd","nd","nd_fancy","nd_m1","nd_m1","needs_api","nin","nonzero","nout","npy_iter_get_dataptr_t","ntypes","num","numiter","numiter","ob_base","ob_base","ob_base","ob_base","ob_base","ob_base","ob_base","ob_base","ob_base","obj","op_flags","outer","outer_next","outer_ptrs","outer_strides","ptr","ptr","ptr","reserved","reserved1","reserved2","scalarkind","scanfunc","setitem","shape","shape","size","size","size","size","sort","strides","strides","strides","strides","subarray","subspace","subspace_iter","subspace_next","subspace_ptrs","subspace_strides","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","translate","translate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","two","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_num","type_resolver","typekind","typeobj","types","unused","userloops","weakreflist","NPY_ANYORDER","NPY_BIG","NPY_BOOL","NPY_BOOLLTR","NPY_BOOL_SCALAR","NPY_BYTE","NPY_BYTELTR","NPY_BYTEORDER_CHAR","NPY_CASTING","NPY_CDOUBLE","NPY_CDOUBLELTR","NPY_CFLOAT","NPY_CFLOATLTR","NPY_CHAR","NPY_CHARLTR","NPY_CLIP","NPY_CLIPMODE","NPY_CLONGDOUBLE","NPY_CLONGDOUBLELTR","NPY_COMPLEXLTR","NPY_COMPLEX_SCALAR","NPY_CORDER","NPY_DATETIME","NPY_DATETIMELTR","NPY_DATETIMEUNIT","NPY_DOUBLE","NPY_DOUBLELTR","NPY_EQUIV_CASTING","NPY_FLOAT","NPY_FLOATINGLTR","NPY_FLOATLTR","NPY_FLOAT_SCALAR","NPY_FORTRANORDER","NPY_FR_D","NPY_FR_GENERIC","NPY_FR_M","NPY_FR_W","NPY_FR_Y","NPY_FR_as","NPY_FR_fs","NPY_FR_h","NPY_FR_m","NPY_FR_ms","NPY_FR_ns","NPY_FR_ps","NPY_FR_s","NPY_FR_us","NPY_GENBOOLLTR","NPY_HALF","NPY_HALFLTR","NPY_HEAPSORT","NPY_IGNORE","NPY_INT","NPY_INTLTR","NPY_INTNEG_SCALAR","NPY_INTPLTR","NPY_INTPOS_SCALAR","NPY_INTROSELECT","NPY_KEEPORDER","NPY_LITTLE","NPY_LONG","NPY_LONGDOUBLE","NPY_LONGDOUBLELTR","NPY_LONGLONG","NPY_LONGLONGLTR","NPY_LONGLTR","NPY_MERGESORT","NPY_NATBYTE","NPY_NATIVE","NPY_NOSCALAR","NPY_NOTYPE","NPY_NO_CASTING","NPY_NTYPES","NPY_OBJECT","NPY_OBJECTLTR","NPY_OBJECT_SCALAR","NPY_OPPBYTE","NPY_ORDER","NPY_QUICKSORT","NPY_RAISE","NPY_SAFE_CASTING","NPY_SAME_KIND_CASTING","NPY_SCALARKIND","NPY_SEARCHLEFT","NPY_SEARCHRIGHT","NPY_SEARCHSIDE","NPY_SELECTKIND","NPY_SHORT","NPY_SHORTLTR","NPY_SIGNEDLTR","NPY_SORTKIND","NPY_STRING","NPY_STRINGLTR","NPY_STRINGLTR2","NPY_SWAP","NPY_TIMEDELTA","NPY_TIMEDELTALTR","NPY_TYPECHAR","NPY_TYPEKINDCHAR","NPY_TYPES","NPY_UBYTE","NPY_UBYTELTR","NPY_UINT","NPY_UINTLTR","NPY_UINTPLTR","NPY_ULONG","NPY_ULONGLONG","NPY_ULONGLONGLTR","NPY_ULONGLTR","NPY_UNICODE","NPY_UNICODELTR","NPY_UNSAFE_CASTING","NPY_UNSIGNEDLTR","NPY_USERDEF","NPY_USHORT","NPY_USHORTLTR","NPY_VOID","NPY_VOIDLTR","NPY_WRAP","as_","as_","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","day","day","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hour","imag","imag","imag","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","min","month","npy_bool","npy_byte","npy_cdouble","npy_cfloat","npy_char","npy_clongdouble","npy_complex128","npy_complex256","npy_complex64","npy_datetime","npy_datetimestruct","npy_double","npy_float","npy_float128","npy_float16","npy_float32","npy_float64","npy_half","npy_hash_t","npy_int","npy_int16","npy_int32","npy_int64","npy_int8","npy_intp","npy_long","npy_longdouble","npy_longlong","npy_short","npy_stride_sort_item","npy_timedelta","npy_timedeltastruct","npy_ubyte","npy_ucs4","npy_uint","npy_uint16","npy_uint32","npy_uint64","npy_uint8","npy_uintp","npy_ulong","npy_ulonglong","npy_ushort","partial_cmp","perm","ps","ps","real","real","real","sec","sec","stride","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","us","us","year","PY_UFUNC_API","PyUFuncAPI","PyUFunc_DD_D","PyUFunc_D_D","PyUFunc_DefaultTypeResolver","PyUFunc_FF_F","PyUFunc_FF_F_As_DD_D","PyUFunc_F_F","PyUFunc_F_F_As_D_D","PyUFunc_FromFuncAndData","PyUFunc_FromFuncAndDataAndSignature","PyUFunc_FromFuncAndDataAndSignatureAndIdentity","PyUFunc_GG_G","PyUFunc_G_G","PyUFunc_GenericFunction","PyUFunc_GetPyValues","PyUFunc_OO_O","PyUFunc_OO_O_method","PyUFunc_O_O","PyUFunc_O_O_method","PyUFunc_On_Om","PyUFunc_RegisterLoopForDescr","PyUFunc_RegisterLoopForType","PyUFunc_ReplaceLoopBySignature","PyUFunc_SetUsesArraysAsData","PyUFunc_ValidateCasting","PyUFunc_checkfperr","PyUFunc_clearfperr","PyUFunc_d_d","PyUFunc_dd_d","PyUFunc_e_e","PyUFunc_e_e_As_d_d","PyUFunc_e_e_As_f_f","PyUFunc_ee_e","PyUFunc_ee_e_As_dd_d","PyUFunc_ee_e_As_ff_f","PyUFunc_f_f","PyUFunc_f_f_As_d_d","PyUFunc_ff_f","PyUFunc_ff_f_As_dd_d","PyUFunc_g_g","PyUFunc_getfperr","PyUFunc_gg_g","PyUFunc_handlefperr","borrow","borrow_mut","from","from_subset","into","is_in_subset","to_subset","to_subset_unchecked","try_from","try_into","type_id"],"q":[[0,"numpy"],[310,"numpy::array"],[393,"numpy::borrow"],[457,"numpy::convert"],[467,"numpy::datetime"],[517,"numpy::datetime::units"],[790,"numpy::npyffi"],[795,"numpy::npyffi::array"],[1119,"numpy::npyffi::flags"],[1189,"numpy::npyffi::objects"],[1657,"numpy::npyffi::types"],[2142,"numpy::npyffi::ufunc"]],"d":["Marker type to indicate that the element type received via …","The given array is already borrowed","Inidcates why borrowing an array failed.","","","Represents that a type can be an element of <code>PyArray</code>.","Represents that given <code>Vec</code> cannot be treated as an array.","Flag that indicates whether this type is trivially …","","Create a one-dimensional index","one-dimensional","Create a two-dimensional index","two-dimensional","Create a three-dimensional index","three-dimensional","Create a four-dimensional index","four-dimensional","Create a five-dimensional index","five-dimensional","Create a six-dimensional index","six-dimensional","Create a dynamic-dimensional index","dynamic-dimensional","Represents that the given array is not contiguous.","The given array is not writeable","","","","","","","","","","","","Binding of <code>numpy.dtype</code>.","","Receiver for arrays or array-like types.","Receiver for zero-dimensional arrays or array-like types.","Receiver for one-dimensional arrays or array-like types.","Receiver for two-dimensional arrays or array-like types.","Receiver for three-dimensional arrays or array-like types.","Receiver for four-dimensional arrays or array-like types.","Receiver for five-dimensional arrays or array-like types.","Receiver for six-dimensional arrays or array-like types.","Receiver for arrays or array-like types whose …","A newtype wrapper around <code>[u8; N]</code> to handle <code>byte</code> scalars …","A newtype wrapper around <code>[PyUCS4; N]</code> to handle <code>str_</code> scalars…","","","","","","","","","","","","","","","","","","","A safe, untyped wrapper for NumPy’s <code>ndarray</code> class.","","","Marker type to indicate that the element type received via …","Returns the required alignment (bytes) of this type …","","","","Safe interface for NumPy’s N-dimensional arrays","Create an <strong><code>Array</code></strong> with one, two or three dimensions.","Returns a raw pointer to the underlying <code>PyArrayObject</code>.","Returns <code>self</code> as <code>*mut PyArray_Descr</code>.","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","","","Returns the type descriptor for the base element of …","Types to safely create references into NumPy arrays","","","","","","","","","","","","","","","","","","","","","Returns an ASCII character indicating the byte-order of …","Returns a unique ASCII character for each of the 21 …","","","","","","","Defines conversion traits between Rust types and NumPy …","Support datetimes and timedeltas","","","","Return the dot product of two arrays.","Returns the type descriptor (“dtype”) for a registered …","Returns the <code>dtype</code> of the array.","Return the Einstein summation convention of given tensors.","Return the Einstein summation convention of given tensors.","","","","","","","","Returns bit-flags describing how this type descriptor is …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","Returns the associated type descriptor (“dtype”) for …","","","","","Returns the type descriptor and offset of the field with …","Returns true if the type descriptor is a structured type.","Returns true if the type descriptor contains any …","Returns true if the type descriptor is a sub-array.","","","Return the inner product of two arrays.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>self</code> as <code>*mut PyArray_Descr</code> while increasing the …","","","","Returns true if the type descriptor is a struct which …","Returns <code>true</code> if the internal data of the array is …","Returns <code>true</code> if the internal data of the array is …","Returns <code>true</code> if the there are no elements in the array.","Returns true if two type descriptors are equivalent.","Returns <code>true</code> if the internal data of the array is …","","","","","","","","","","","Returns true if type descriptor byteorder is native, or …","","","Returns the element size of this type descriptor.","Returns an ASCII character (one of <code>biufcmMOSUV</code>) …","Calculates the total number of elements in the array.","","Returns an ordered list of field names, or <code>None</code> if there …","","Returns the number of dimensions if this type descriptor …","Returns the number of dimensions of the array.","Creates a new type descriptor (“dtype”) object from an …","Low-Level bindings for NumPy C API.","Returns a unique number for each of the 21 different …","Shortcut for creating a type descriptor of <code>object</code> type.","Returns the type descriptor for a registered type.","","","Create a <code>PyArray</code> with one, two or three dimensions.","","Returns the shape of the sub-array.","Returns a slice which contains dimmensions of the array.","Returns a slice indicating how many bytes to advance when …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the array scalar corresponding to this type …","A safe, statically-typed wrapper for NumPy’s <code>ndarray</code> …","Zero-dimensional array.","One-dimensional array.","Two-dimensional array.","Three-dimensional array.","Four-dimensional array.","Five-dimensional array.","Six-dimensional array.","Dynamic-dimensional array.","Return evenly spaced values within a given interval.","Returns an <code>ArrayView</code> of the internal array.","Returns an <code>ArrayViewMut</code> of the internal array.","","Returns the internal array as <code>RawArrayView</code> enabling …","Returns the internal array as <code>RawArrayViewMut</code> enabling …","","Returns an immutable view of the internal data as a slice.","Returns a mutable view of the internal data as a slice.","Access an untyped representation of this array.","","Creates a NumPy array backed by <code>array</code> and ties its …","","Cast the <code>PyArray&lt;T&gt;</code> to <code>PyArray&lt;U&gt;</code>, by allocating a new …","Copies <code>self</code> into <code>other</code>, performing a data type conversion …","Returns a pointer to the first element of the array.","","Same as <code>shape</code>, but returns <code>D</code> instead of <code>&amp;[usize]</code>.","","","","Returns the argument unchanged.","Construct a NumPy array from a <code>ndarray::ArrayBase</code>.","Constructs a reference to a <code>PyArray</code> from a raw point to a …","","Construct a one-dimensional array from an <code>Iterator</code>.","Constructs a NumPy from an <code>ndarray::Array</code>","Construct a NumPy array containing objects stored in a …","Constructs a reference to a <code>PyArray</code> from a raw pointer to …","","Construct a one-dimensional array from a slice.","","Construct a one-dimensional array from a <code>Vec&lt;T&gt;</code>.","Construct a two-dimension array from a <code>Vec&lt;Vec&lt;T&gt;&gt;</code>.","Construct a three-dimensional array from a <code>Vec&lt;Vec&lt;Vec&lt;T&gt;&gt;&gt;</code>…","Get a reference of the specified element if the given …","Returns a handle to NumPy’s multiarray module.","Same as <code>get</code>, but returns <code>Option&lt;&amp;mut T&gt;</code>.","Get a copy of the specified element in the array.","Calls <code>U::from(self)</code>.","","","","","Get the single element of a zero-dimensional array.","Creates a new uninitialized NumPy array.","Get an immutable borrow of the NumPy array","Get a mutable borrow of the NumPy array","Special case of <code>reshape_with_order</code> which keeps the memory …","Construct a new array which has same values as self, but …","Extends or truncates the dimensions of an array.","Turn an array with fixed dimensionality into one with …","","Turn <code>&amp;PyArray&lt;T,D&gt;</code> into <code>Py&lt;PyArray&lt;T,D&gt;&gt;</code>, i.e. a pointer …","Get a copy of the array as an <code>ndarray::Array</code>.","","","","Returns a copy of the internal data of the array as a <code>Vec</code>.","Try to convert this array into a <code>nalgebra::MatrixView</code> …","Try to convert this array into a <code>nalgebra::MatrixViewMut</code> …","","","","","","Get an immutable borrow of the NumPy array","Get a mutable borrow of the NumPy array","","","Get an immutable reference of the specified element, …","Same as <code>uget</code>, but returns <code>&amp;mut T</code>.","Same as <code>uget</code>, but returns <code>*mut T</code>.","Construct a new NumPy array filled with zeros.","Read-only borrow of an array.","Read-only borrow of a zero-dimensional array.","Read-only borrow of a one-dimensional array.","Read-only borrow of a two-dimensional array.","Read-only borrow of a three-dimensional array.","Read-only borrow of a four-dimensional array.","Read-only borrow of a five-dimensional array.","Read-only borrow of a six-dimensional array.","Read-only borrow of an array whose dimensionality is …","Read-write borrow of an array.","Read-write borrow of a zero-dimensional array.","Read-write borrow of a one-dimensional array.","Read-write borrow of a two-dimensional array.","Read-write borrow of a three-dimensional array.","Read-write borrow of a four-dimensional array.","Read-write borrow of a five-dimensional array.","Read-write borrow of a six-dimensional array.","Read-write borrow of an array whose dimensionality is …","Provides an immutable array view of the interior of the …","Provides a mutable array view of the interior of the NumPy …","Convert this one-dimensional array into a …","Convert this two-dimensional array into a …","Convert this one-dimensional array into a …","Convert this two-dimensional array into a …","Provide an immutable slice view of the interior of the …","Provide a mutable slice view of the interior of the NumPy …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Provide an immutable reference to an element of the NumPy …","Provide a mutable reference to an element of the NumPy …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Extends or truncates the dimensions of an array.","","","","","","Try to convert this array into a <code>nalgebra::MatrixView</code> …","Try to convert this array into a <code>nalgebra::MatrixViewMut</code> …","","","","","","","The dimension type of the resulting array.","The dimension type of the resulting array.","Conversion trait from owning Rust types into <code>PyArray</code>.","The element type of resulting array.","The element type of resulting array.","Trait implemented by types that can be used to index an …","Utility trait to specify the dimensions of an array.","Conversion trait from borrowing Rust types to <code>PyArray</code>.","Consumes <code>self</code> and moves its data into a NumPy array.","Copies the content pointed to by <code>&amp;self</code> into a newly …","The abbrevation used for debug formatting","Corresponds to the <code>datetime64</code> scalar type","Corresponds to the [<code>timedelta64</code>][scalars-datetime64] …","The matching NumPy datetime unit code","Represents the datetime units supported by NumPy","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Predefined implementors of the <code>Unit</code> trait","Attoseconds, i.e. 10^-18 seconds","Days, i.e. 24 hours","Femtoseconds, i.e. 10^-15 seconds","Hours, i.e. 60 minutes","Microseconds, i.e. 10^-6 seconds","Milliseconds, i.e. 10^-3 seconds","Minutes, i.e. 60 seconds","Months, i.e. 30 days","Nanoseconds, i.e. 10^-9 seconds","Picoseconds, i.e. 10^-12 seconds","Seconds","Weeks, i.e. 7 days","Years, i.e. 12 months","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Low-Level binding for Array API","","Low-Lebel binding for NumPy C API C-objects","","Low-Level binding for UFunc API","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","All type objects exported by the NumPy API.","A global variable which stores a ‘capsule’ pointer to …","See PY_ARRAY_API for more.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Checks that <code>op</code> is an instance of <code>PyArray</code> or not.","","","Checks that <code>op</code> is an exact instance of <code>PyArray</code> or noteturns the argument unchanged.","Returns the argument unchanged.","","","Get a pointer of the type object assocaited with <code>ty</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A global variable which stores a ‘capsule’ pointer to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","",""],"i":[0,11,0,0,0,0,0,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,7,10,11,0,0,12,6,6,12,6,12,6,0,6,12,33,35,23,7,10,11,18,19,6,12,33,35,23,7,10,11,18,19,6,6,18,19,18,19,18,19,0,0,6,12,23,0,0,12,0,0,18,19,18,19,6,12,23,6,6,6,12,12,33,35,23,7,7,10,10,11,11,18,18,19,19,6,12,33,35,23,7,10,11,18,18,19,19,6,12,6,12,6,12,33,35,23,7,10,11,18,19,0,21,153,154,18,19,6,6,6,6,18,19,0,6,12,33,35,23,7,10,11,18,19,6,6,12,12,6,12,12,12,6,12,6,12,33,35,23,7,10,11,18,19,6,6,12,6,6,12,0,6,0,6,12,6,0,6,6,6,18,19,0,0,6,12,12,6,12,18,19,6,12,7,10,11,18,19,6,12,33,35,23,7,10,11,18,19,6,12,33,35,23,7,10,11,18,19,6,6,12,12,33,35,23,7,10,11,18,19,6,12,6,12,6,12,33,35,23,7,10,11,18,19,6,12,33,35,23,7,10,11,18,19,6,12,6,0,0,0,0,0,0,0,0,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,71,72,71,71,72,72,71,72,71,72,71,72,71,71,71,72,71,72,71,72,71,72,71,72,71,72,71,72,71,72,71,72,72,71,71,72,71,72,71,72,71,72,71,72,71,72,155,156,0,155,156,0,0,0,155,156,82,0,0,82,0,83,84,83,84,83,84,83,84,83,84,83,84,83,84,83,84,83,83,84,84,83,84,83,84,83,84,83,84,83,84,83,84,83,84,83,84,83,84,83,84,83,84,83,84,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,91,92,93,94,95,96,97,98,99,100,101,102,90,91,92,93,94,95,96,97,98,99,100,101,102,90,91,92,93,94,95,96,97,98,99,100,101,102,90,91,92,93,94,95,96,97,98,99,100,101,102,90,91,92,93,94,95,96,97,98,99,100,101,102,90,91,92,93,94,95,96,97,98,99,100,101,102,90,91,92,93,94,95,96,97,98,99,100,101,102,90,91,92,93,94,95,96,97,98,99,100,101,102,90,91,92,93,94,95,96,97,98,99,100,101,102,90,91,92,93,94,95,96,97,98,99,100,101,102,90,91,92,93,94,95,96,97,98,99,100,101,102,90,91,92,93,94,95,96,97,98,99,100,101,102,90,91,92,93,94,95,96,97,98,99,100,101,102,90,91,92,93,94,95,96,97,98,99,100,101,102,90,91,92,93,94,95,96,97,98,99,100,101,102,90,91,92,93,94,95,96,97,98,99,100,101,102,90,91,92,93,94,95,96,97,98,99,100,101,102,90,91,92,93,94,95,96,97,98,99,100,101,102,90,91,92,93,94,95,96,97,98,99,100,101,102,90,91,92,93,94,95,96,97,98,99,100,101,102,0,0,0,0,0,135,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,0,0,0,135,135,135,135,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,0,103,103,0,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,135,103,103,103,103,103,103,103,103,103,135,135,135,135,135,135,135,135,103,103,103,103,103,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,103,103,103,135,103,135,103,135,103,135,103,103,135,103,135,103,135,103,135,103,135,103,135,103,135,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,140,129,14,130,140,127,127,127,137,129,130,140,13,136,115,142,143,129,13,14,136,127,137,128,115,138,139,107,130,114,140,129,141,142,143,13,14,136,127,137,128,115,138,139,107,130,114,140,129,141,142,143,130,140,14,14,127,127,127,127,13,14,136,127,137,128,115,138,139,107,130,114,140,129,141,142,143,141,13,14,136,127,137,128,115,138,139,107,130,114,140,129,141,142,143,127,129,140,130,140,130,140,127,127,139,139,139,139,139,139,13,138,139,130,140,129,13,138,13,114,140,129,130,140,139,127,14,129,129,129,129,129,129,14,130,140,129,129,127,127,127,14,127,127,13,14,137,115,138,107,141,13,14,136,127,137,128,115,138,139,107,130,114,140,129,141,142,143,13,14,136,127,137,128,115,138,139,107,130,114,140,129,141,142,143,127,139,127,14,139,130,114,140,129,13,14,136,127,137,128,115,138,139,107,130,114,140,129,141,142,143,13,14,136,127,137,128,115,138,139,107,130,114,140,129,141,142,143,138,129,139,129,114,14,139,128,115,130,140,130,140,139,143,14,140,139,14,139,13,138,114,140,129,129,130,140,129,139,127,139,0,139,142,114,129,13,14,137,115,139,130,114,140,129,139,139,129,129,129,129,128,115,139,141,139,139,127,127,127,136,138,130,114,140,129,127,13,138,130,140,14,129,129,129,129,129,13,14,136,127,137,128,115,138,139,107,130,114,140,129,141,142,143,13,14,136,127,137,128,115,138,139,107,130,114,140,129,141,142,143,13,14,136,127,137,128,115,138,139,107,130,114,140,129,141,142,143,130,140,13,14,136,127,137,128,115,138,139,107,130,114,140,129,141,142,143,13,14,136,127,137,128,115,138,139,107,130,114,140,129,141,142,143,138,14,13,14,136,127,137,128,115,138,139,107,130,114,140,129,141,142,143,14,139,138,14,139,129,139,13,73,150,147,148,116,147,148,0,0,147,148,147,148,147,148,117,0,147,148,149,116,73,147,148,0,147,148,105,147,149,148,116,73,120,120,120,120,120,120,120,120,120,120,120,120,120,120,149,147,148,112,150,147,148,116,148,116,111,73,150,147,147,148,147,148,148,112,150,150,116,147,105,147,147,148,116,150,0,112,117,105,105,0,131,131,0,0,147,148,149,0,147,148,148,150,147,148,0,0,0,147,148,147,148,148,147,147,148,148,147,148,105,149,147,147,148,147,148,117,121,132,144,145,146,73,116,112,131,120,147,111,105,117,121,132,119,148,149,150,144,145,146,73,116,112,131,120,147,111,105,117,121,132,119,148,149,150,144,145,146,73,116,112,131,120,147,111,105,117,121,132,119,148,149,150,144,145,146,73,116,112,131,120,147,111,105,117,121,132,119,148,149,150,147,121,132,73,116,112,131,120,147,111,105,117,150,73,116,112,131,120,147,111,105,117,150,144,145,146,73,116,112,131,120,147,111,105,121,132,119,148,149,150,144,145,146,73,116,112,131,120,147,111,105,117,121,132,119,148,149,150,144,145,146,73,116,112,131,120,147,111,105,117,121,132,119,148,149,150,73,116,112,131,120,147,111,105,117,150,121,144,145,146,144,145,146,73,116,112,131,120,147,111,105,117,121,132,119,148,149,150,144,145,146,73,116,112,131,120,147,111,105,117,121,132,119,148,149,150,121,121,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,147,119,121,132,144,145,146,121,132,119,144,145,146,73,116,112,131,120,147,111,105,117,121,132,119,148,149,150,144,145,146,73,116,112,131,120,147,111,105,117,121,132,119,148,149,150,144,145,146,73,116,112,131,120,147,111,105,117,121,132,119,148,149,150,144,145,146,73,116,112,131,120,147,111,105,117,121,132,119,148,149,150,144,145,146,73,116,112,131,120,147,111,105,117,121,132,119,148,149,150,144,145,146,73,116,112,131,120,147,111,105,117,121,132,119,148,149,150,121,132,121,0,0,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151],"f":[0,0,0,0,0,0,0,0,0,[1,[[3,[[2,[1]]]]]],0,[[1,1],[[3,[[2,[1]]]]]],0,[[1,1,1],[[3,[[2,[1]]]]]],0,[[1,1,1,1],[[3,[[2,[1]]]]]],0,[[1,1,1,1,1],[[3,[[2,[1]]]]]],0,[[1,1,1,1,1,1],[[3,[[2,[1]]]]]],0,[[[4,[1]]],[[3,[5]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[6,1],[[7,8],9],[[10,8],9],[[11,8],9],0,0,[12,13],[6,14],[6,15],[12,15],[6,16],[12,16],[6,6],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6,17],[6,17],[18,18],[19,19],[[]],[[]],[[18,18],20],[[19,19],20],0,0,[6,16],[12,16],[[[23,[21,22,0]]]],[[[24,[21,22]],[24,[21,22]]],[[25,[[0,[21]]]]]],[8,6],[12,6],[[26,[4,[[24,[21,27]]]]],[[25,[[0,[21]]]]]],0,[[18,18],28],[[19,19],28],[[],28],[[],28],[16,[[25,[6]]]],[16,[[25,[12]]]],[16,[[25,[[23,[21,22,0]]]]]],[6,29],[[6,30],[[32,[31]]]],[[6,30],[[32,[31]]]],[[12,30],[[32,[31]]]],[[12,30],[[32,[31]]]],[[33,30],34],[[35,30],34],[[[23,[[0,[21,36]],[0,[22,36]],[0,[0,36]]]],30],34],[[7,30],34],[[7,30],34],[[10,30],34],[[10,30],34],[[11,30],34],[[11,30],34],[[18,30],34],[[18,30],34],[[19,30],34],[[19,30],34],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[2,[37]]],18],[[]],[[[2,[38]]],19],[[]],[[8,15],39],[[8,15],39],[[8,15],39],[[8,15],39],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[8,6],[8,6],[8,6],[8,6],[8,6],[[6,26],25],[6,28],[6,28],[6,28],[[18,40]],[[19,40]],[[[24,[21,22]],[24,[21,22]]],[[25,[[0,[21]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6,14],[[6,8],[[41,[6]]]],[[12,8],[[41,[12]]]],[[12,8],9],[6,28],[12,28],[12,28],[12,28],[[6,6],28],[12,28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[6,[[39,[28]]]],[16,28],[16,28],[6,1],[6,17],[12,1],0,[6,[[39,[[42,[26]]]]]],0,[6,1],[12,1],[[8,[0,[43,44]]],[[25,[6]]]],0,[6,45],[8,6],[8,6],[[18,18],[[39,[20]]]],[[19,19],[[39,[20]]]],0,0,[6,[[42,[1]]]],[12,[[4,[1]]]],[12,[[4,[46]]]],[[6,8],9],[[12,8],9],[[]],[[]],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],32],[[[48,[16]]],[[32,[49]]]],[[],32],[[[48,[16]]],[[32,[49]]]],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[[48,[16]]],[[32,[49]]]],[[[48,[16]]],[[32,[49]]]],[[[48,[16]]]],[[[48,[16]]]],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[8,51],[8,51],[6,52],0,0,0,0,0,0,0,0,0,[[8,[0,[21,[54,[53]]]],[0,[21,[54,[53]]]],[0,[21,[54,[53]]]]],[[24,[[0,[21,[54,[53]]]],55]]]],[[[24,[21,22]]],[[56,[21,22]]]],[[[24,[21,22]]],[[57,[21,22]]]],[24,15],[[[24,[21,22]]],[[58,[21,22]]]],[[[24,[21,22]]],[[59,[21,22]]]],[24,16],[[[24,[21,22]]],[[32,[[4,[21]],10]]]],[[[24,[21,22]]],[[32,[[4,[21]],10]]]],[24,12],[[]],[[[61,[60,22]],16],[[24,[21,22]]]],[[]],[[[24,[21]],28],[[25,[[24,[21]]]]]],[[[24,[21]],[24,[21]]],25],[24],[24],[[[24,[21,22]]],22],[16,[[25,[[24,[21,22]]]]]],[[24,30],[[32,[31]]]],[[24,30],[[32,[31]]]],[[]],[[8,[61,[60,22]]],[[24,[21,22]]]],[[8,15],24],[[8,15],39],[[8,62],[[24,[21,55]]]],[[8,[63,[21,22]]],[[24,[21,22]]]],[[8,[63,[41,22]]],[[24,[9,22]]]],[[8,15],24],[[8,15],39],[[8,[4,[21]]],[[24,[21,55]]]],[[]],[[8,[42,[21]]],[[24,[21,55]]]],[[8,[4,[[42,[21]]]]],[[32,[[24,[21,64]],7]]]],[[8,[4,[[42,[[42,[21]]]]]]],[[32,[[24,[21,65]],7]]]],[[[24,[21,22]],66],[[39,[21]]]],[8,[[25,[67]]]],[[[24,[21,22]],66],[[39,[21]]]],[[[24,[21,22]],66],[[39,[21]]]],[[]],[[24,8],9],[[24,8],[[41,[24]]]],[[],28],[16,28],[[[24,[[0,[68,21]],69]]],[[0,[68,21]]]],[[8,70,28],[[24,[21,22]]]],[[[24,[21,22]]],[[71,[21,22]]]],[[[24,[21,22]]],[[72,[21,22]]]],[[[24,[21]],70],[[25,[[24,[21]]]]]],[[[24,[21]],70,73],[[25,[[24,[21]]]]]],[[[24,[21]],70],25],[[[24,[21,22]]],[[24,[21,27]]]],[[24,8],9],[24,[[41,[24]]]],[[[24,[21,22]]],[[63,[21,22]]]],[[],47],[[],39],[[]],[[[24,[21,22]]],[[32,[[42,[21]],10]]]],[[[24,[[0,[74,21]],22]]],[[39,[[76,[[0,[74,21]],75,75,75,75]]]]]],[[[24,[[0,[74,21]],22]]],[[39,[[77,[[0,[74,21]],75,75,75,75]]]]]],[[[48,[16]]],[[32,[49]]]],[[],32],[[[48,[16]]],[[32,[49]]]],[[[48,[16]]]],[[],32],[[[24,[21,22]]],[[32,[[71,[21,22]],11]]]],[[[24,[21,22]]],[[32,[[72,[21,22]],11]]]],[[],50],[8,51],[[[24,[21,22]],66],21],[[[24,[21,22]],66],21],[[[24,[21,22]],66]],[[8,70,28],[[24,[21,22]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[71,[21,22]]],[[56,[21,22]]]],[[[72,[21,22]]],[[57,[21,22]]]],[[[71,[[0,[74,21]],55]]],[[79,[[0,[74,21]],78,78]]]],[[[71,[[0,[74,21]],64]]],[[79,[[0,[74,21]],78,78]]]],[[[72,[[0,[74,21]],55]]],[[80,[[0,[74,21]],78,78]]]],[[[72,[[0,[74,21]],64]]],[[80,[[0,[74,21]],78,78]]]],[[[71,[21,22]]],[[32,[[4,[21]],10]]]],[[[72,[21,22]]],[[32,[[4,[21]],10]]]],[[]],[[]],[[]],[[]],[[[71,[21,22]]],[[71,[21,22]]]],[[]],[[[71,[21,22]]]],[[[72,[21,22]]]],[[[71,[21,22]]]],[[[72,[21,22]]]],[16,[[25,[[71,[21,22]]]]]],[16,[[25,[[72,[21,22]]]]]],[[[71,[21,22]],30],34],[[[72,[21,22]],30],34],[[]],[[]],[[]],[[]],[[[71,[21,22]],66],[[39,[21]]]],[[[72,[21,22]],66],[[39,[21]]]],[[]],[[]],[[],28],[[],28],[[[72,[21,55]],70],[[25,[[72,[21,55]]]]]],[[]],[[],39],[[],39],[[]],[[]],[[[71,[[0,[74,21]],22]]],[[39,[[76,[[0,[74,21]],75,75,75,75]]]]]],[[[72,[[0,[74,21]],22]]],[[39,[[77,[[0,[74,21]],75,75,75,75]]]]]],[[],32],[[],32],[[],32],[[],32],[[],50],[[],50],0,0,0,0,0,0,0,0,[8,24],[8,24],0,0,0,0,0,[[]],[[]],[[]],[[]],[[[83,[[0,[81,82]]]]],[[83,[[0,[81,82]]]]]],[[[84,[[0,[81,82]]]]],[[84,[[0,[81,82]]]]]],[[]],[[]],[[[83,[[0,[85,82]]]],[83,[[0,[85,82]]]]],20],[[[84,[[0,[85,82]]]],[84,[[0,[85,82]]]]],20],[[[83,[[0,[86,82]]]],[83,[[0,[86,82]]]]],28],[[[84,[[0,[86,82]]]],[84,[[0,[86,82]]]]],28],[[],28],[[],28],[[[83,[82]],30],34],[[[84,[82]],30],34],[87,[[83,[82]]]],[[]],[87,[[84,[82]]]],[[]],[[]],[[]],[8,6],[8,6],[[[83,[[0,[88,82]]]],40]],[[[84,[[0,[88,82]]]],40]],[[]],[[]],[[],28],[[],28],[[[83,[[0,[89,82]]]],[83,[[0,[89,82]]]]],[[39,[20]]]],[[[84,[[0,[89,82]]]],[84,[[0,[89,82]]]]],[[39,[20]]]],[[]],[[]],[[],39],[[],39],[[]],[[]],[[],32],[[],32],[[],32],[[],32],[[],50],[[],50],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[90,90],[91,91],[92,92],[93,93],[94,94],[95,95],[96,96],[97,97],[98,98],[99,99],[100,100],[101,101],[102,102],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[90,90],20],[[91,91],20],[[92,92],20],[[93,93],20],[[94,94],20],[[95,95],20],[[96,96],20],[[97,97],20],[[98,98],20],[[99,99],20],[[100,100],20],[[101,101],20],[[102,102],20],[[90,90],28],[[91,91],28],[[92,92],28],[[93,93],28],[[94,94],28],[[95,95],28],[[96,96],28],[[97,97],28],[[98,98],28],[[99,99],28],[[100,100],28],[[101,101],28],[[102,102],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[90,30],34],[[91,30],34],[[92,30],34],[[93,30],34],[[94,30],34],[[95,30],34],[[96,30],34],[[97,30],34],[[98,30],34],[[99,30],34],[[100,30],34],[[101,30],34],[[102,30],34],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[90,40]],[[91,40]],[[92,40]],[[93,40]],[[94,40]],[[95,40]],[[96,40]],[[97,40]],[[98,40]],[[99,40]],[[100,40]],[[101,40]],[[102,40]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[90,90],[[39,[20]]]],[[91,91],[[39,[20]]]],[[92,92],[[39,[20]]]],[[93,93],[[39,[20]]]],[[94,94],[[39,[20]]]],[[95,95],[[39,[20]]]],[[96,96],[[39,[20]]]],[[97,97],[[39,[20]]]],[[98,98],[[39,[20]]]],[[99,99],[[39,[20]]]],[[100,100],[[39,[20]]]],[[101,101],[[39,[20]]]],[[102,102],[[39,[20]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],0,0,0,0,0,0,[[103,8,45,13,104,73,105,104,14,45,45,106,106],107],[[103,8,107],107],[[103,8,107,106,106],45],[[103,8,107],45],[[103,8,107]],[[103,8,107],45],[[103,8,107,45],106],[[103,8,107],106],[[103,8,107],29],[[103,8,107],14],[[103,8,107,29],108],[[103,8,107],106],[[103,8,107],29],[[103,8,107,106]],[[103,8,107],106],[[103,8,107],106],[[103,8,107],106],[[103,8,107,106,106]],[[103,8,107,29],109],[[103,8,107],106],[[103,8,107,106],13],[[103,8,107],45],[[103,8,107],45],[[103,8,107],13],[[103,8,107,29]],[[103,8,107,106],45],[[103,8,107,29]],[[103,8,107,106],45],[[103,8,107,106],45],[[103,8,107,106],45],[[103,8,107],110],[[103,8,107],110],[[103,8,107],110],[[103,8,107],110],[[103,8,107],110],[[103,8,107,45],110],[[103,8,107],110],[[103,8,107],110],[[103,8,45,13,104,73,105,104,14],107],[[103,8,13,104,73,105,14],107],[[103,8,107,45],45],[[103,8,107],45],[[103,8,107],110],[[103,8,107,29],45],[[103,8,107,29,29],45],[[103,8,107,106,106,29],45],0,0,0,0,0,0,0,[[103,8,13,45,13],15],[[103,8,13,45,13],15],[[103,8,53,53,53,45],15],[[103,8,15,15,15,14],15],[[103,8,13,45,13],15],[[103,8,13,45,13],15],[[103,8,13,13,45,111],15],[[103,8,13,45,112],15],[[103,8,15,29,45,45],45],[[103,8,15,29,45,45,45],45],[[103,8,15,113,106,45,14],45],[[103,8,15,45],45],[[103,8,15,110],45],[[103,8,114],45],[[103,8,15,106,45],15],[[103,8,15,115],45],[[103,8,15,29],45],[[103,8,13,110],15],[[103,8,13,14,105],110],[[103,8,45,45],45],[[103,8,51,51],110],[[103,8,14,14],110],[[103,8,14,14,105],110],[[103,8,45,45,116],45],[[103,8,13,13],45],[[103,8,15,14,113,45],45],[[103,8,15,113,14],45],[[103,8,13,13],45],[[103,8,13,14,45],15],[[103,8,15,105],45],[[8,15],45],[[103,8,15],45],[[103,8,13,45,45],15],[[8,15],45],[[103,8,15,14,45,45,45,15],15],[[103,8,45,45,106,106,106,106],110],[[103,8,13,15,13,117],15],[[103,8,13,15,15,13],15],[[103,8,15,117],45],[[103,8,106,106,45],45],[[103,8,29,29,1],45],[[103,8,118,118,1],45],[[103,8,13,15,45,13],15],[[103,8,15,45],15],[[103,8,13,13],15],[[103,8,15,117,45],45],[[103,8,15,45],13],[[103,8,15,15],45],[[103,8,15],15],[[103,8,13,13],45],[[103,8,13,13],45],[[103,8,13,15],45],[[103,8,15,15,45],15],[[103,8,15,15,45],15],[[103,8,13],106],[[103,8,45,106,119]],[[103,8,13,45,45,13],15],[[103,8,13,45,45,13],15],[[103,8,120,121],122],[[103,8,122,120,121]],[[103,8,13]],[[103,8,15,14],45],[[103,8,15,14],45],[[103,8,15,14],45],[[103,8,15,14],45],[[103,8,15,14],14],[[103,8,15],14],[[103,8,45],14],[[103,8,15],14],[[103,8,14],14],[[103,8,14,29],14],[[103,8,45],14],[[103,8,13,45,45,45],15],[[103,8,15,15,45],45],[[103,8,15,45],15],[[103,8,29,106,13,14,73,105,13],15],[[103,8,29],45],[[103,8,15],45],[[103,8,45,106,14,45],15],[[103,8,15],15],[[103,8,15],15],[[103,8,45,45],123],[[103,8,14,14],123],[[103,8,13,29],45],[[103,8,15],15],[[103,8,13,15]],[[103,8,13,15],45],[[103,8,13,73],15],[[103,8,15,113],45],[[103,8,15,14,45,45,45,15],15],[[103,8,13,14,45],15],[[103,8,15,14,15],15],[[103,8,15,14,106,106],15],[[103,8,45,45,45],15],[[103,8,45,45,14,29],15],[[103,8,124,14,106,29],15],[[103,8,15],15],[[103,8,15,14,106],15],[[103,8,15,14],15],[[103,8,29,106,14,106,29],15],[[103,8,15],15],[[103,8,15,14,110,14,45,106,13,15],45],[[103,8,14,45],125],[[103,8],45],[[103,8,13,14,45],15],[[103,8],126],[[103,8],126],[[103,8],15],[[103,8,15,53],53],[[103,8,13,106],113],[[103,8,13],45],[[103,8,127]],[[103,8,15,15],15],[[103,8,45,106],15],[[103,8,15,128],45],[[103,8,15,106,45],45],[[103,8,29,14]],[[103,8,29,14]],[[103,8,15,45],15],[[103,8,15],15],[[103,8,15,45],15],[[103,8,13,15],15],[[103,8,13,15,45,13],15],[[103,8,129]],[[103,8,129,13,45]],[[103,8,15,15],15],[[103,8,15,15,13],15],[[103,8,13,45,13],15],[[103,8,13,45,45,13],15],[[103,8,13,45,13],15],[[103,8,13],14],[[103,8,13,13],45],[[103,8,45,45],45],[[103,8,106,45],106],[[103,8,130,106,45,13],15],[[103,8,51,45,106,45,106,113,45,45,15],15],[[103,8,13,73],15],[[103,8,15],15],[[103,8,51,14,45,106,106,113,45,15],15],[[103,8,13,73,14,45],15],[[103,8,13,128,73],15],[[103,8,13],15],[[103,8,15,45],45],[[103,8,13],29],[[103,8,15,73],45],[[103,8,15,13],45],[[103,8,106,45],106],[[103,8,13,13,45,111],45],[[103,8,13,45,45,13],15],[[103,8,14,14],14],[[103,8,13,45,13],15],[[103,8,13,15,15],15],[[103,8,13,15,15,117],15],[[103,8,15],45],[[103,8,15],106],[[103,8,13,73],15],[[103,8,14,45,116],45],[[103,8,14,45,125],45],[[103,8,14],45],[[103,8,13,110]],[[103,8,114],45],[[103,8,13,15,45],15],[[103,8,13,15],15],[[103,8,13,128,45,73],15],[[103,8,13],45],[[103,8,106,13,106,14],14],[[103,8,13],15],[[103,8,13,45,13],15],[[103,8,113,14,15],15],[[103,8,15,113]],[[103,8,15],15],[[103,8,45,13],116],[[103,8,13,15,131,15],15],[[103,8,15,113],45],[[103,8,15,111],45],[[103,8,13,15],45],[[103,8,15]],[[103,8,13,14,45,15],45],[[103,8,15],45],[[103,8,15,45]],[[103,8,13,13],45],[[103,8,13,13],45],[[103,8,15],106],[[103,8,13,45,112],45],[[103,8,15,112],45],[[103,8,13],15],[[103,8,13,45,45,13,45],15],[[103,8,13,45,45,13],15],[[103,8,13,45,45],15],[[103,8,13,15,45,13,117],15],[[103,8,120,132],122],[[103,8,133,120,132]],[[103,8,13,124,29,29],45],[[103,8,13],15],[[103,8,13,73],15],[[103,8,13,45,45,45,45,13],15],[[103,8,13,128],15],0,[[103,8,45],15],[[103,8,45,45],45],[[103,8,13,45]],[[103,8,45],45],[[103,8,13,14,51],15],[[103,8,15,15,15],15],[[103,8,13],45],[[103,8,13],29],[[103,8,45,106,14,45],15],0,0,0,0,0,0,0,0,[[103,8,113]],[[103,8,1],113],[[103,8,1,1],113],[[103,8,113,1],113],[[103,8,134,113,113],134],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[103,8],113],[[103,8,45]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[103,8,135],51],[[]],[[]],[[],28],[[],28],[[],39],[[],39],[[]],[[]],[[],32],[[],32],[[],32],[[],32],[[],50],[[],50],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[13,13],[14,14],[136,136],[127,127],[137,137],[128,128],[115,115],[138,138],[139,139],[107,107],[130,130],[114,114],[140,140],[129,129],[141,141],[142,142],[143,143],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[107,30],34],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],0,0,[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[144,144],[145,145],[146,146],[73,73],[116,116],[112,112],[131,131],[120,120],[147,147],[111,111],[105,105],[117,117],[121,121],[132,132],[119,119],[148,148],[149,149],[150,150],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[147,147],20],0,0,[[73,73],28],[[116,116],28],[[112,112],28],[[131,131],28],[[120,120],28],[[147,147],28],[[111,111],28],[[105,105],28],[[117,117],28],[[150,150],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[144,30],34],[[145,30],34],[[146,30],34],[[73,30],34],[[116,30],34],[[112,30],34],[[131,30],34],[[120,30],34],[[147,30],34],[[111,30],34],[[105,30],34],[[121,30],34],[[132,30],34],[[119,30],34],[[148,30],34],[[149,30],34],[[150,30],34],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[73,40]],[[116,40]],[[112,40]],[[131,40]],[[120,40]],[[147,40]],[[111,40]],[[105,40]],[[117,40]],[[150,40]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[147,147],[[39,[20]]]],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],0,0,0,0,0,[[151,8,29,106,106,113]],[[151,8,29,106,106,113]],[[151,8,139,105,13,15,14],45],[[151,8,29,106,106,113]],[[151,8,29,106,106,113]],[[151,8,29,106,106,113]],[[151,8,29,106,106,113]],[[151,8,152,113,29,45,45,45,45,29,29,45],15],[[151,8,152,113,29,45,45,45,45,29,29,45,29],15],[[151,8,139,113,29,45,45,45,45,29,29,45,29,29],45],[[151,8,29,106,106,113]],[[151,8,29,106,106,113]],[[151,8,139,15,15,13],45],[[151,8,29,45,45,15],45],[[151,8,29,106,106,113]],[[151,8,29,106,106,113]],[[151,8,29,106,106,113]],[[151,8,29,106,106,113]],[[151,8,29,106,106,113]],[[151,8,139,14,152,14,113],45],[[151,8,139,45,152,45,113],45],[[151,8,139,152,45,152],45],[[151,8,113,1],45],[[151,8,139,105,13,14],45],[[151,8,45,15,45],45],[[151,8]],[[151,8,29,106,106,113]],[[151,8,29,106,106,113]],[[151,8,29,106,106,113]],[[151,8,29,106,106,113]],[[151,8,29,106,106,113]],[[151,8,29,106,106,113]],[[151,8,29,106,106,113]],[[151,8,29,106,106,113]],[[151,8,29,106,106,113]],[[151,8,29,106,106,113]],[[151,8,29,106,106,113]],[[151,8,29,106,106,113]],[[151,8,29,106,106,113]],[[151,8],45],[[151,8,29,106,106,113]],[[151,8,45,15,45,45],45],[[]],[[]],[[]],[[]],[[]],[[],28],[[],39],[[]],[[],32],[[],32],[[],50]],"c":[],"p":[[15,"usize"],[15,"array"],[3,"Dim"],[15,"slice"],[3,"IxDynImpl"],[3,"PyArrayDescr"],[3,"FromVecError"],[3,"Python"],[6,"PyObject"],[3,"NotContiguousError"],[4,"BorrowError"],[3,"PyUntypedArray"],[3,"PyArrayObject"],[3,"PyArray_Descr"],[3,"PyObject"],[3,"PyAny"],[15,"u8"],[3,"PyFixedString"],[3,"PyFixedUnicode"],[4,"Ordering"],[8,"Element"],[8,"Dimension"],[3,"PyArrayLike"],[3,"PyArray"],[6,"PyResult"],[15,"str"],[6,"IxDyn"],[15,"bool"],[6,"c_char"],[3,"Formatter"],[3,"Error"],[4,"Result"],[3,"TypeMustMatch"],[6,"Result"],[3,"AllowTypeChange"],[8,"Debug"],[6,"Py_UCS1"],[6,"Py_UCS4"],[4,"Option"],[8,"Hasher"],[3,"Py"],[3,"Vec"],[8,"ToPyObject"],[8,"Sized"],[6,"c_int"],[15,"isize"],[3,"String"],[8,"Into"],[3,"PyDowncastError"],[3,"TypeId"],[3,"PyTypeObject"],[3,"PyType"],[15,"f64"],[8,"AsPrimitive"],[6,"Ix1"],[6,"ArrayView"],[6,"ArrayViewMut"],[6,"RawArrayView"],[6,"RawArrayViewMut"],[8,"Data"],[3,"ArrayBase"],[8,"IntoIterator"],[6,"Array"],[6,"Ix2"],[6,"Ix3"],[8,"NpyIndex"],[3,"PyModule"],[8,"Copy"],[6,"Ix0"],[8,"IntoDimension"],[3,"PyReadonlyArray"],[3,"PyReadwriteArray"],[4,"NPY_ORDER"],[8,"Scalar"],[8,"Dim"],[6,"MatrixView"],[6,"MatrixViewMut"],[3,"Dyn"],[6,"DMatrixView"],[6,"DMatrixViewMut"],[8,"Clone"],[8,"Unit"],[3,"Datetime"],[3,"Timedelta"],[8,"Ord"],[8,"PartialEq"],[15,"i64"],[8,"Hash"],[8,"PartialOrd"],[3,"Years"],[3,"Months"],[3,"Weeks"],[3,"Days"],[3,"Hours"],[3,"Minutes"],[3,"Seconds"],[3,"Milliseconds"],[3,"Microseconds"],[3,"Nanoseconds"],[3,"Picoseconds"],[3,"Femtoseconds"],[3,"Attoseconds"],[3,"PyArrayAPI"],[6,"npy_uint32"],[4,"NPY_CASTING"],[6,"npy_intp"],[3,"NpyIter"],[6,"NpyIter_GetMultiIndexFunc"],[6,"NpyIter_IterNextFunc"],[6,"npy_bool"],[4,"NPY_SELECTKIND"],[4,"NPY_SORTKIND"],[6,"c_void"],[3,"PyArrayMultiIterObject"],[3,"PyArray_Chunk"],[4,"NPY_SCALARKIND"],[4,"NPY_CLIPMODE"],[6,"npy_ucs4"],[3,"npy_stride_sort_item"],[4,"NPY_DATETIMEUNIT"],[3,"npy_datetimestruct"],[6,"npy_datetime"],[6,"c_uchar"],[4,"FILE"],[6,"PyArray_VectorUnaryFunc"],[6,"c_uint"],[3,"PyArray_ArrFuncs"],[3,"PyArray_Dims"],[3,"PyArrayMapIterObject"],[3,"PyArrayIterObject"],[4,"NPY_SEARCHSIDE"],[3,"npy_timedeltastruct"],[6,"npy_timedelta"],[6,"PyDataMem_EventHookFunc"],[4,"NpyTypes"],[3,"PyArray_ArrayDescr"],[3,"PyArrayFlagsObject"],[3,"PyArrayInterface"],[3,"PyUFuncObject"],[3,"PyArrayNeighborhoodIterObject"],[3,"NpyAuxData"],[3,"PyArray_DatetimeMetaData"],[3,"PyArray_DatetimeDTypeMetaData"],[3,"npy_cdouble"],[3,"npy_cfloat"],[3,"npy_clongdouble"],[4,"NPY_TYPES"],[4,"NPY_TYPECHAR"],[4,"NPY_TYPEKINDCHAR"],[4,"NPY_BYTEORDER_CHAR"],[3,"PyUFuncAPI"],[6,"PyUFuncGenericFunction"],[6,"Complex32"],[6,"Complex64"],[8,"IntoPyArray"],[8,"ToPyArray"]],"a":{"nalgebra":[378,379,413,414,415,416,449,450]}}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
